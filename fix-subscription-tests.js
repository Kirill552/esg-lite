/**
 * –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤ –ø–æ–¥–ø–∏—Å–æ–∫
 * –ó–∞–º–µ–Ω—è–µ—Ç –≤—Å–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –º–æ–∫–∏ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ
 */

const fs = require('fs');
const path = require('path');

// –§–∞–π–ª—ã –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
const filesToFix = [
  '__tests__/api/subscriptions/subscriptions-api.test.ts',
  '__tests__/lib/subscription-service.test.ts'
];

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
const fixes = [
  // –ó–∞–º–µ–Ω–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
  {
    search: /import { SubscriptionPlan, SubscriptionStatus } from '@prisma\/client';/g,
    replace: `import { SubscriptionPlan, SubscriptionStatus } from '@prisma/client';
import { createMockSubscriptionInfo } from '../../utils/subscription-mocks';`
  },
  
  // –ó–∞–º–µ–Ω–∞ —Å—Ç–∞—Ä—ã—Ö –º–æ–∫–æ–≤
  {
    search: /const mock\w*Subscription = \{[^}]*planType: SubscriptionPlan\.\w+[^}]*\};/gm,
    replace: 'const mockSubscription = createMockSubscriptionInfo();'
  },
  
  // –£–±–∏—Ä–∞–µ–º priceRub –∏–∑ expect
  {
    search: /expect\(result\.priceRub\)\.toBe\(\d+\);/g,
    replace: '// priceRub –ø—Ä–æ–≤–µ—Ä–∫–∞ —É–±—Ä–∞–Ω–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è finalPrice'
  }
];

console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç—ã –ø–æ–¥–ø–∏—Å–æ–∫...');

filesToFix.forEach(filePath => {
  if (fs.existsSync(filePath)) {
    let content = fs.readFileSync(filePath, 'utf8');
    let modified = false;
    
    fixes.forEach(fix => {
      if (fix.search.test(content)) {
        content = content.replace(fix.search, fix.replace);
        modified = true;
      }
    });
    
    if (modified) {
      fs.writeFileSync(filePath, content);
      console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω: ${filePath}`);
    } else {
      console.log(`‚ö†Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω: ${filePath} (–∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –Ω—É–∂–Ω—ã)`);
    }
  } else {
    console.log(`‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω: ${filePath}`);
  }
});

console.log('‚ú® –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
console.log('');
console.log('–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
console.log('1. npm run type-check - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∏–ø—ã');
console.log('2. npx jest __tests__/utils/subscription-mocks.test.ts - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –º–æ–∫–∏');
console.log('3. npx jest __tests__/lib/subscription-service.test.ts - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã');
