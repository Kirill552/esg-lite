"use strict";
/**
 * Surge Pricing Service - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º –≤ –ø–∏–∫–æ–≤—ã–µ –ø–µ—Ä–∏–æ–¥—ã
 * –†–µ–∞–ª–∏–∑—É–µ—Ç –ª–æ–≥–∏–∫—É –ø–æ–≤—ã—à–µ–Ω–∏—è —Ü–µ–Ω –≤ –ø–µ—Ä–∏–æ–¥ 15-30 –∏—é–Ω—è
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.surgePricingService = exports.SurgePricingService = void 0;
/**
 * –°–µ—Ä–≤–∏—Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è surge-pricing
 */
class SurgePricingService {
    constructor() {
        this.config = {
            surgeMonth: 6, // –∏—é–Ω—å
            surgeStartDay: 15,
            surgeEndDay: 30,
            surgeMultiplier: 2,
            normalMultiplier: 1
        };
        console.log('üîß [STUB] Surge Pricing Service –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }
    static getInstance() {
        if (!SurgePricingService.instance) {
            SurgePricingService.instance = new SurgePricingService();
        }
        return SurgePricingService.instance;
    }
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ surge –ø–µ—Ä–∏–æ–¥
     */
    isSurgePeriod(date = new Date()) {
        const month = date.getMonth() + 1; // 0-based, –ø–æ—ç—Ç–æ–º—É +1
        const day = date.getDate();
        const isSurge = month === this.config.surgeMonth &&
            day >= this.config.surgeStartDay &&
            day <= this.config.surgeEndDay;
        if (isSurge) {
            console.log(`üîß [STUB] Surge –ø–µ—Ä–∏–æ–¥ –∞–∫—Ç–∏–≤–µ–Ω: ${day} ${this.getMonthName(month)}`);
        }
        else {
            console.log(`üîß [STUB] Surge –ø–µ—Ä–∏–æ–¥ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω: ${day} ${this.getMonthName(month)}`);
        }
        return isSurge;
    }
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –º–Ω–æ–∂–∏—Ç–µ–ª—è —Ü–µ–Ω—ã
     */
    getSurgeMultiplier(date = new Date()) {
        const multiplier = this.isSurgePeriod(date) ?
            this.config.surgeMultiplier :
            this.config.normalMultiplier;
        console.log(`üîß [STUB] –ú–Ω–æ–∂–∏—Ç–µ–ª—å —Ü–µ–Ω—ã: x${multiplier}`);
        return multiplier;
    }
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –∑–∞–¥–∞—á–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ surge –ø–µ—Ä–∏–æ–¥–∞
     */
    getJobPriority(date = new Date()) {
        const priority = this.isSurgePeriod(date) ? 'high' : 'normal';
        console.log(`üîß [STUB] –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∑–∞–¥–∞—á–∏: ${priority}`);
        return priority;
    }
    /**
     * –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Å —É—á–µ—Ç–æ–º surge-pricing
     */
    calculatePrice(basePrice, date = new Date()) {
        const multiplier = this.getSurgeMultiplier(date);
        const finalPrice = basePrice * multiplier;
        console.log(`üîß [STUB] –†–∞—Å—á–µ—Ç —Ü–µ–Ω—ã: ${basePrice} x ${multiplier} = ${finalPrice}`);
        return finalPrice;
    }
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ surge-pricing
     */
    getSurgePricingInfo(date = new Date()) {
        const isSurge = this.isSurgePeriod(date);
        const multiplier = this.getSurgeMultiplier(date);
        // –°–æ–∑–¥–∞–µ–º –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ surge –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –≥–æ–¥–∞
        const year = date.getFullYear();
        const startDate = new Date(year, this.config.surgeMonth - 1, this.config.surgeStartDay);
        const endDate = new Date(year, this.config.surgeMonth - 1, this.config.surgeEndDay);
        return {
            isSurge,
            multiplier,
            period: isSurge ? 'surge' : 'normal',
            startDate,
            endDate
        };
    }
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ –Ω–∞—á–∞–ª–∞/–∫–æ–Ω—Ü–∞ surge –ø–µ—Ä–∏–æ–¥–∞
     */
    getTimeToSurgeChange(date = new Date()) {
        const year = date.getFullYear();
        const surgeStart = new Date(year, this.config.surgeMonth - 1, this.config.surgeStartDay);
        const surgeEnd = new Date(year, this.config.surgeMonth - 1, this.config.surgeEndDay);
        if (this.isSurgePeriod(date)) {
            // Surge –∞–∫—Ç–∏–≤–µ–Ω, —Å—á–∏—Ç–∞–µ–º –¥–æ –∫–æ–Ω—Ü–∞
            const daysToEnd = Math.ceil((surgeEnd.getTime() - date.getTime()) / (1000 * 60 * 60 * 24));
            return {
                type: 'end',
                daysRemaining: daysToEnd,
                targetDate: surgeEnd
            };
        }
        else {
            // Surge –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω, —Å—á–∏—Ç–∞–µ–º –¥–æ –Ω–∞—á–∞–ª–∞
            let targetStart = surgeStart;
            // –ï—Å–ª–∏ surge –ø–µ—Ä–∏–æ–¥ —É–∂–µ –ø—Ä–æ—à–µ–ª –≤ —ç—Ç–æ–º –≥–æ–¥—É, —Å—á–∏—Ç–∞–µ–º –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –≥–æ–¥–∞
            if (date > surgeEnd) {
                targetStart = new Date(year + 1, this.config.surgeMonth - 1, this.config.surgeStartDay);
            }
            const daysToStart = Math.ceil((targetStart.getTime() - date.getTime()) / (1000 * 60 * 60 * 24));
            return {
                type: 'start',
                daysRemaining: daysToStart,
                targetDate: targetStart
            };
        }
    }
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ surge-pricing
     */
    getUserMessage(date = new Date()) {
        const info = this.getSurgePricingInfo(date);
        const timeInfo = this.getTimeToSurgeChange(date);
        if (info.isSurge) {
            return `‚ö° –ü–µ—Ä–∏–æ–¥ –ø–æ–≤—ã—à–µ–Ω–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏! –°—Ç–æ–∏–º–æ—Å—Ç—å —É–≤–µ–ª–∏—á–µ–Ω–∞ –≤ ${info.multiplier} —Ä–∞–∑–∞. –û—Å—Ç–∞–ª–æ—Å—å ${timeInfo.daysRemaining} –¥–Ω–µ–π –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è.`;
        }
        else {
            if (timeInfo.type === 'start') {
                return `üí° –î–æ –ø–µ—Ä–∏–æ–¥–∞ –ø–æ–≤—ã—à–µ–Ω–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏ –æ—Å—Ç–∞–ª–æ—Å—å ${timeInfo.daysRemaining} –¥–Ω–µ–π. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ.`;
            }
            else {
                return `‚úÖ –û–±—ã—á–Ω—ã–π –ø–µ—Ä–∏–æ–¥. –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏.`;
            }
        }
    }
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ surge-pricing
     */
    updateConfig(newConfig) {
        this.config = { ...this.config, ...newConfig };
        console.log('üîß [STUB] –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è surge-pricing –æ–±–Ω–æ–≤–ª–µ–Ω–∞:', this.config);
    }
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
     */
    getConfig() {
        return { ...this.config };
    }
    /**
     * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Å—è—Ü–∞
     */
    getMonthName(month) {
        const months = [
            '—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è',
            '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'
        ];
        return months[month - 1] || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    }
}
exports.SurgePricingService = SurgePricingService;
// –≠–∫—Å–ø–æ—Ä—Ç singleton instance
exports.surgePricingService = SurgePricingService.getInstance();
