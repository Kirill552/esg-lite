/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Yandex Cloud Monitoring
 * –ë—ã—Å—Ç—Ä–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–µ–∑ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
 */

import * as fs from 'fs';
import * as path from 'path';

function checkYandexMonitoringConfig() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Yandex Cloud Monitoring\n');

  const issues = [];
  const warnings = [];

  // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
  console.log('1Ô∏è‚É£ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
  const requiredEnvVars = {
    'YANDEX_CLOUD_FOLDER_ID': process.env.YANDEX_CLOUD_FOLDER_ID,
    'YANDEX_CLOUD_SA_KEY_FILE': process.env.YANDEX_CLOUD_SA_KEY_FILE,
    'YANDEX_MONITORING_ENABLED': process.env.YANDEX_MONITORING_ENABLED
  };

  for (const [key, value] of Object.entries(requiredEnvVars)) {
    if (value) {
      console.log(`   ‚úÖ ${key}: ${value}`);
    } else {
      console.log(`   ‚ùå ${key}: –ù–ï –ó–ê–î–ê–ù`);
      issues.push(`–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è ${key} –Ω–µ –∑–∞–¥–∞–Ω–∞`);
    }
  }

  // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ –∫–ª—é—á–∞ Service Account
  console.log('\n2Ô∏è‚É£ –§–∞–π–ª –∫–ª—é—á–∞ Service Account:');
  const keyFilePath = process.env.YANDEX_CLOUD_SA_KEY_FILE || 'authorized_key.json';
  const fullKeyPath = path.resolve(keyFilePath);
  
  if (fs.existsSync(fullKeyPath)) {
    console.log(`   ‚úÖ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω: ${fullKeyPath}`);
    
    try {
      const keyContent = JSON.parse(fs.readFileSync(fullKeyPath, 'utf8'));
      console.log(`   ‚úÖ JSON –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω`);
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
      const requiredFields = ['id', 'service_account_id', 'private_key', 'public_key'];
      for (const field of requiredFields) {
        if (keyContent[field]) {
          console.log(`   ‚úÖ –ü–æ–ª–µ ${field}: –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
        } else {
          console.log(`   ‚ùå –ü–æ–ª–µ ${field}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
          issues.push(`–í –∫–ª—é—á–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ ${field}`);
        }
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ Service Account ID
      if (keyContent.service_account_id) {
        console.log(`   üìù Service Account ID: ${keyContent.service_account_id}`);
      }
      
    } catch (error) {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON: ${error instanceof Error ? error.message : String(error)}`);
      issues.push('–§–∞–π–ª –∫–ª—é—á–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON');
    }
  } else {
    console.log(`   ‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${fullKeyPath}`);
    issues.push('–§–∞–π–ª –∫–ª—é—á–∞ Service Account –Ω–µ –Ω–∞–π–¥–µ–Ω');
  }

  // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ FOLDER_ID
  console.log('\n3Ô∏è‚É£ FOLDER_ID:');
  const folderId = process.env.YANDEX_CLOUD_FOLDER_ID;
  if (folderId) {
    if (folderId.startsWith('b1g') && folderId.length > 10) {
      console.log(`   ‚úÖ –§–æ—Ä–º–∞—Ç FOLDER_ID –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω: ${folderId}`);
    } else {
      console.log(`   ‚ö†Ô∏è  –í–æ–∑–º–æ–∂–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π FOLDER_ID: ${folderId}`);
      warnings.push('FOLDER_ID –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–±—ã—á–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É Yandex Cloud (b1g...)');
    }
  }

  // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
  console.log('\n4Ô∏è‚É£ –°–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:');
  const monitoringEnabled = process.env.YANDEX_MONITORING_ENABLED === 'true';
  if (monitoringEnabled) {
    console.log('   ‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤–∫–ª—é—á–µ–Ω');
  } else {
    console.log('   ‚ö†Ô∏è  –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Ç–∫–ª—é—á–µ–Ω');
    warnings.push('–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ YANDEX_MONITORING_ENABLED=true');
  }

  // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
  console.log('\n5Ô∏è‚É£ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:');
  const interval = process.env.YANDEX_MONITORING_INTERVAL || '300000';
  const pgInterval = process.env.YANDEX_MONITORING_PG_INTERVAL || '600000';
  
  console.log(`   üìä –ò–Ω—Ç–µ—Ä–≤–∞–ª –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ—Ç—Ä–∏–∫: ${parseInt(interval) / 1000 / 60} –º–∏–Ω—É—Ç`);
  console.log(`   üêò –ò–Ω—Ç–µ—Ä–≤–∞–ª PostgreSQL –º–µ—Ç—Ä–∏–∫: ${parseInt(pgInterval) / 1000 / 60} –º–∏–Ω—É—Ç`);

  // –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
  console.log('\n' + '='.repeat(50));
  if (issues.length === 0) {
    console.log('üéâ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤—ã–≥–ª—è–¥–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π!');
    
    if (warnings.length > 0) {
      console.log('\n‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:');
      warnings.forEach(warning => console.log(`   ‚Ä¢ ${warning}`));
    }
    
    console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('   1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–∞–≤–∞ Service Account —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å');
    console.log('   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç: npm run test:yandex-monitoring');
    console.log('   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–µ—Ç—Ä–∏–∫–∏ –≤ Yandex Cloud Console');
    
  } else {
    console.log('‚ùå –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:');
    issues.forEach(issue => console.log(`   ‚Ä¢ ${issue}`));
    
    console.log('\nüîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
    console.log('   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env');
    console.log('   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ authorized_key.json —Å–æ–∑–¥–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    console.log('   3. –°–º. –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é: docs/YANDEX_MONITORING_PERMISSIONS.md');
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
if (require.main === module) {
  checkYandexMonitoringConfig();
}

export { checkYandexMonitoringConfig };
