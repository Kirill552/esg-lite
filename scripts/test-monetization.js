#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç –Ω–æ–≤–æ–π –º–æ–¥–µ–ª–∏ –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏ ESG-Lite
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–∞—Å—á—ë—Ç–æ–≤ –¥–ª—è –≤—Å–µ—Ö —Ç–∞—Ä–∏—Ñ–Ω—ã—Ö –ø–ª–∞–Ω–æ–≤
 */

require('dotenv').config();

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –º–æ–¥–µ–ª–∏ –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏ ESG-Lite...\n');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ .env
const config = {
  currency: process.env.SYSTEM_CURRENCY || 'RUB',
  lite: {
    minEmissions: parseInt(process.env.LITE_MIN_EMISSIONS || '50000'),
    maxEmissions: parseInt(process.env.LITE_MAX_EMISSIONS || '150000'),
    basePayment: parseInt(process.env.LITE_BASE_PAYMENT || '75000'),
    ratePerTon: parseFloat(process.env.LITE_RATE_PER_TON || '1.5'),
  },
  standard: {
    minEmissions: parseInt(process.env.STANDARD_MIN_EMISSIONS || '150000'),
    maxEmissions: parseInt(process.env.STANDARD_MAX_EMISSIONS || '1000000'),
    basePayment: parseInt(process.env.STANDARD_BASE_PAYMENT || '150000'),
    ratePerTon: parseFloat(process.env.STANDARD_RATE_PER_TON || '0.32'),
  },
  large: {
    minEmissions: parseInt(process.env.LARGE_MIN_EMISSIONS || '1000000'),
    maxEmissions: parseInt(process.env.LARGE_MAX_EMISSIONS || '3000000'),
    basePayment: parseInt(process.env.LARGE_BASE_PAYMENT || '250000'),
    ratePerTon: parseFloat(process.env.LARGE_RATE_PER_TON || '0.33'),
  },
  cbam: {
    annualFee: parseInt(process.env.CBAM_ANNUAL_FEE || '15000'),
    ratePerTon: parseInt(process.env.CBAM_RATE_PER_TON || '255'),
  },
  surge: {
    multiplier: parseFloat(process.env.SURGE_MULTIPLIER || '2.0'),
  }
};

console.log('üìä –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', {
  currency: config.currency,
  plans: {
    lite: `${config.lite.basePayment} ‚ÇΩ + ${config.lite.ratePerTon} ‚ÇΩ/—Ç`,
    standard: `${config.standard.basePayment} ‚ÇΩ + ${config.standard.ratePerTon} ‚ÇΩ/—Ç`,
    large: `${config.large.basePayment} ‚ÇΩ + ${config.large.ratePerTon} ‚ÇΩ/—Ç`
  }
});

// –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á—ë—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
function calculatePrice(emissions, planConfig) {
  const basePrice = planConfig.basePayment;
  const variablePrice = Math.max(0, emissions - planConfig.minEmissions) * planConfig.ratePerTon;
  return basePrice + variablePrice;
}

// –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–ª–∞–Ω–∞
function determinePlan(emissions) {
  if (emissions < config.lite.minEmissions) return 'TRIAL';
  if (emissions <= config.lite.maxEmissions) return 'LITE';
  if (emissions <= config.standard.maxEmissions) return 'STANDARD';
  return 'LARGE';
}

console.log('\nüßÆ –¢–µ—Å—Ç—ã —Ä–∞—Å—á—ë—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏:\n');

// –¢–µ—Å—Ç 1: –ü–ª–∞–Ω –õ–∞–π—Ç (–º–∏–Ω–∏–º—É–º)
const liteMinPrice = calculatePrice(50000, config.lite);
console.log(`1. –õ–∞–π—Ç (50k —Ç): ${liteMinPrice.toLocaleString()} ‚ÇΩ`);
console.log(`   –ë–∞–∑–æ–≤—ã–π: ${config.lite.basePayment} ‚ÇΩ, –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è: ${(50000 - config.lite.minEmissions) * config.lite.ratePerTon} ‚ÇΩ`);

// –¢–µ—Å—Ç 2: –ü–ª–∞–Ω –õ–∞–π—Ç (–º–∞–∫—Å–∏–º—É–º)
const liteMaxPrice = calculatePrice(150000, config.lite);
console.log(`2. –õ–∞–π—Ç (150k —Ç): ${liteMaxPrice.toLocaleString()} ‚ÇΩ`);
console.log(`   –ë–∞–∑–æ–≤—ã–π: ${config.lite.basePayment} ‚ÇΩ, –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è: ${(150000 - config.lite.minEmissions) * config.lite.ratePerTon} ‚ÇΩ`);

// –¢–µ—Å—Ç 3: –ü–ª–∞–Ω –°—Ç–∞–Ω–¥–∞—Ä—Ç (–º–∏–Ω–∏–º—É–º)
const standardMinPrice = calculatePrice(150000, config.standard);
console.log(`3. –°—Ç–∞–Ω–¥–∞—Ä—Ç (150k —Ç): ${standardMinPrice.toLocaleString()} ‚ÇΩ`);
console.log(`   –ë–∞–∑–æ–≤—ã–π: ${config.standard.basePayment} ‚ÇΩ, –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è: ${(150000 - config.standard.minEmissions) * config.standard.ratePerTon} ‚ÇΩ`);

// –¢–µ—Å—Ç 4: –ü–ª–∞–Ω –°—Ç–∞–Ω–¥–∞—Ä—Ç (1 –º–ª–Ω —Ç–æ–Ω–Ω - —Ü–µ–ª–µ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å)
const standardTargetPrice = calculatePrice(1000000, config.standard);
console.log(`4. –°—Ç–∞–Ω–¥–∞—Ä—Ç (1–ú —Ç): ${standardTargetPrice.toLocaleString()} ‚ÇΩ ‚≠ê`);
console.log(`   –ë–∞–∑–æ–≤—ã–π: ${config.standard.basePayment} ‚ÇΩ, –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è: ${(1000000 - config.standard.minEmissions) * config.standard.ratePerTon} ‚ÇΩ`);
console.log(`   üéØ –¶–µ–ª–µ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: 420,000 ‚ÇΩ (–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ: ${Math.abs(standardTargetPrice - 420000).toLocaleString()} ‚ÇΩ)`);

// –¢–µ—Å—Ç 5: –ü–ª–∞–Ω –ö—Ä—É–ø–Ω—ã–π (–º–∏–Ω–∏–º—É–º)
const largeMinPrice = calculatePrice(1000000, config.large);
console.log(`5. –ö—Ä—É–ø–Ω—ã–π (1–ú —Ç): ${largeMinPrice.toLocaleString()} ‚ÇΩ`);
console.log(`   –ë–∞–∑–æ–≤—ã–π: ${config.large.basePayment} ‚ÇΩ, –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è: ${(1000000 - config.large.minEmissions) * config.large.ratePerTon} ‚ÇΩ`);

// –¢–µ—Å—Ç 6: –ü–ª–∞–Ω –ö—Ä—É–ø–Ω—ã–π (–º–∞–∫—Å–∏–º—É–º)
const largeMaxPrice = calculatePrice(3000000, config.large);
console.log(`6. –ö—Ä—É–ø–Ω—ã–π (3–ú —Ç): ${largeMaxPrice.toLocaleString()} ‚ÇΩ`);
console.log(`   –ë–∞–∑–æ–≤—ã–π: ${config.large.basePayment} ‚ÇΩ, –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è: ${(3000000 - config.large.minEmissions) * config.large.ratePerTon} ‚ÇΩ`);

// –¢–µ—Å—Ç 7: CBAM –º–æ–¥—É–ª—å
console.log('\nüåç –¢–µ—Å—Ç—ã CBAM –º–æ–¥—É–ª—è:\n');
const cbamPrice = config.cbam.annualFee + (30000 * config.cbam.ratePerTon);
console.log(`7. CBAM (30k —Ç): ${cbamPrice.toLocaleString()} ‚ÇΩ`);
console.log(`   –ì–æ–¥–æ–≤–∞—è –ø–ª–∞—Ç–∞: ${config.cbam.annualFee} ‚ÇΩ, –ó–∞ —Ç–æ–Ω–Ω—É: ${30000 * config.cbam.ratePerTon} ‚ÇΩ`);

// –¢–µ—Å—Ç 8: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–ª–∞–Ω–æ–≤
console.log('\nüìã –¢–µ—Å—Ç—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–ª–∞–Ω–æ–≤:\n');
const testEmissions = [30000, 75000, 150000, 500000, 1000000, 2000000];
testEmissions.forEach(emissions => {
  const plan = determinePlan(emissions);
  console.log(`${emissions.toLocaleString()} —Ç ‚Üí –ü–ª–∞–Ω: ${plan}`);
});

// –¢–µ—Å—Ç 9: –°–≤–µ—Ä—Ö–ø–∏–∫–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥
console.log('\n‚ö° –¢–µ—Å—Ç —Å–≤–µ—Ä—Ö–ø–∏–∫–æ–≤–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ (√ó2 –≤ –∏—é–Ω–µ):\n');
const normalPrice = calculatePrice(500000, config.standard);
const surgePrice = normalPrice * config.surge.multiplier;
console.log(`–°—Ç–∞–Ω–¥–∞—Ä—Ç (500k —Ç):`);
console.log(`  –û–±—ã—á–Ω–∞—è —Ü–µ–Ω–∞: ${normalPrice.toLocaleString()} ‚ÇΩ`);
console.log(`  –°–≤–µ—Ä—Ö–ø–∏–∫–æ–≤–∞—è: ${surgePrice.toLocaleString()} ‚ÇΩ (√ó${config.surge.multiplier})`);

console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
console.log('\nüí∞ –†–µ–∑—é–º–µ –º–æ–¥–µ–ª–∏ –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏:');
console.log(`‚Ä¢ –õ–∞–π—Ç: ${config.lite.basePayment.toLocaleString()} ‚ÇΩ + ${config.lite.ratePerTon} ‚ÇΩ/—Ç (50k-150k —Ç)`);
console.log(`‚Ä¢ –°—Ç–∞–Ω–¥–∞—Ä—Ç: ${config.standard.basePayment.toLocaleString()} ‚ÇΩ + ${config.standard.ratePerTon} ‚ÇΩ/—Ç (150k-1–ú —Ç)`);
console.log(`‚Ä¢ –ö—Ä—É–ø–Ω—ã–π: ${config.large.basePayment.toLocaleString()} ‚ÇΩ + ${config.large.ratePerTon} ‚ÇΩ/—Ç (1–ú-3–ú —Ç)`);
console.log(`‚Ä¢ CBAM: ${config.cbam.annualFee.toLocaleString()} ‚ÇΩ/–≥–æ–¥ + ${config.cbam.ratePerTon} ‚ÇΩ/—Ç`);
console.log(`‚Ä¢ –°–≤–µ—Ä—Ö–ø–∏–∫–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥: √ó${config.surge.multiplier} (15-30 –∏—é–Ω—è)`);
