const { chromium } = require('playwright');

async function testCreditsPagePerformance() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫—Ä–µ–¥–∏—Ç–æ–≤...\n');
  
  const browser = await chromium.launch({ headless: false });
  const page = await browser.newPage();
  
  try {
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    const requests = [];
    page.on('request', request => {
      if (request.url().includes('/api/')) {
        requests.push(request.url());
      }
    });
    
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫–æ–Ω—Å–æ–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫
    const consoleErrors = [];
    page.on('console', msg => {
      if (msg.type() === 'error') {
        consoleErrors.push(msg.text());
      }
    });
    
    // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫—Ä–µ–¥–∏—Ç–æ–≤
    console.log('üìç –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ /credits...');
    const startTime = Date.now();
    
    await page.goto('http://localhost:3000/credits', { waitUntil: 'networkidle' });
    
    const loadTime = Date.now() - startTime;
    console.log(`‚è±Ô∏è –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏: ${loadTime}ms`);
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    await page.waitForSelector('[data-testid="credits-page"]', { timeout: 10000 });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–æ–≤
    console.log('üîÑ –û–∂–∏–¥–∞–Ω–∏–µ —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ (3 —Å–µ–∫—É–Ω–¥—ã)...');
    await page.waitForTimeout(3000);
    
    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
    await page.screenshot({ path: 'credits-page-test.png' });
    
    // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
    console.log(`‚úÖ –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏: ${loadTime}ms`);
    console.log(`‚úÖ API –∑–∞–ø—Ä–æ—Å—ã: ${requests.length}`);
    console.log(`${consoleErrors.length === 0 ? '‚úÖ' : '‚ùå'} –û—à–∏–±–∫–∏ –∫–æ–Ω—Å–æ–ª–∏: ${consoleErrors.length}`);
    
    if (requests.length > 0) {
      console.log('\nüåê API –∑–∞–ø—Ä–æ—Å—ã:');
      requests.forEach(url => console.log(`  - ${url}`));
    }
    
    if (consoleErrors.length > 0) {
      console.log('\n‚ùå –û—à–∏–±–∫–∏ –∫–æ–Ω—Å–æ–ª–∏:');
      consoleErrors.forEach(error => console.log(`  - ${error}`));
    }
    
    console.log('\nüéØ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  } finally {
    await browser.close();
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testCreditsPagePerformance().catch(console.error);
