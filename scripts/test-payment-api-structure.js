/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints –¥–ª—è –ø–ª–∞—Ç–µ–∂–µ–π
 * –ó–∞–¥–∞—á–∞ 6.3: –°–æ–∑–¥–∞—Ç—å API endpoints –¥–ª—è –ø–ª–∞—Ç–µ–∂–µ–π
 */

const { execSync } = require('child_process');

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Payment API endpoints...\n');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API endpoint
async function testApiEndpoint(endpoint, method = 'GET', body = null) {
  try {
    console.log(`üì° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ${method} ${endpoint}`);
    
    const curlCommand = method === 'GET' 
      ? `curl -s -o /dev/null -w "%{http_code}" http://localhost:3000${endpoint}`
      : `curl -s -o /dev/null -w "%{http_code}" -X ${method} -H "Content-Type: application/json" ${body ? `-d '${JSON.stringify(body)}'` : ''} http://localhost:3000${endpoint}`;
    
    console.log(`   Command: ${curlCommand}`);
    return { endpoint, method, status: 'tested' };
  } catch (error) {
    console.log(`   ‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
    return { endpoint, method, status: 'error', error: error.message };
  }
}

async function main() {
  console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã API endpoints:\n');
  
  // –°–ø–∏—Å–æ–∫ endpoints –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
  const endpoints = [
    {
      path: '/api/payments/create',
      methods: ['GET', 'POST'],
      description: '–°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–µ–π'
    },
    {
      path: '/api/payments/webhook',
      methods: ['GET', 'POST'],
      description: 'Webhook YooKassa'
    },
    {
      path: '/api/payments/test-payment-id',
      methods: ['GET'],
      description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ'
    }
  ];

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
  const fs = require('fs');
  const path = require('path');
  
  for (const endpoint of endpoints) {
    const routePath = endpoint.path.replace('/api/', 'app/api/').replace('test-payment-id', '[id]') + '/route.ts';
    const fullPath = path.join(process.cwd(), routePath);
    
    console.log(`üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞: ${routePath}`);
    if (fs.existsSync(fullPath)) {
      console.log(`   ‚úÖ –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
      const content = fs.readFileSync(fullPath, 'utf8');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–∫—Å–ø–æ—Ä—Ç –º–µ—Ç–æ–¥–æ–≤
      for (const method of endpoint.methods) {
        if (content.includes(`export async function ${method}`)) {
          console.log(`   ‚úÖ –ú–µ—Ç–æ–¥ ${method} —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω`);
        } else {
          console.log(`   ‚ùå –ú–µ—Ç–æ–¥ ${method} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        }
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
      if (content.includes('NextRequest') && content.includes('NextResponse')) {
        console.log(`   ‚úÖ Next.js –∏–º–ø–æ—Ä—Ç—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç`);
      } else {
        console.log(`   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç Next.js –∏–º–ø–æ—Ä—Ç—ã`);
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
      if (content.includes('auth()')) {
        console.log(`   ‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞`);
      } else {
        console.log(`   ‚ùå –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
      }
      
    } else {
      console.log(`   ‚ùå –§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
    }
    console.log('');
  }

  console.log('2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å—Ö–µ–º:\n');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º create endpoint
  const createRoutePath = 'app/api/payments/create/route.ts';
  const createRouteFullPath = path.join(process.cwd(), createRoutePath);
  
  if (fs.existsSync(createRouteFullPath)) {
    const content = fs.readFileSync(createRouteFullPath, 'utf8');
    
    console.log('üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å—Ö–µ–º –≤ create endpoint:');
    
    const validationChecks = [
      { name: 'CreditsPaymentSchema', found: content.includes('CreditsPaymentSchema') },
      { name: 'SubscriptionPaymentSchema', found: content.includes('SubscriptionPaymentSchema') },
      { name: 'MarketplacePaymentSchema', found: content.includes('MarketplacePaymentSchema') },
      { name: 'PaymentRequestSchema', found: content.includes('PaymentRequestSchema') },
      { name: 'z.discriminatedUnion', found: content.includes('z.discriminatedUnion') },
      { name: 'Zod –≤–∞–ª–∏–¥–∞—Ü–∏—è', found: content.includes('z.object') }
    ];
    
    for (const check of validationChecks) {
      console.log(`   ${check.found ? '‚úÖ' : '‚ùå'} ${check.name}`);
    }
  }
  
  console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Payment Service:\n');
  
  const integrationChecks = [
    {
      file: 'app/api/payments/create/route.ts',
      checks: [
        'createCreditsPayment',
        'createSubscriptionPayment', 
        'createMarketplacePayment'
      ]
    },
    {
      file: 'app/api/payments/webhook/route.ts',
      checks: [
        'processPaymentWebhook'
      ]
    },
    {
      file: 'app/api/payments/[id]/route.ts',
      checks: [
        'getPaymentInfo'
      ]
    }
  ];
  
  for (const integration of integrationChecks) {
    const fullPath = path.join(process.cwd(), integration.file);
    
    console.log(`üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ ${integration.file}:`);
    
    if (fs.existsSync(fullPath)) {
      const content = fs.readFileSync(fullPath, 'utf8');
      
      for (const check of integration.checks) {
        const found = content.includes(check);
        console.log(`   ${found ? '‚úÖ' : '‚ùå'} ${check} –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è`);
      }
    } else {
      console.log(`   ‚ùå –§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
    }
    console.log('');
  }

  console.log('4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫:\n');
  
  const errorHandlingChecks = [
    'try...catch –±–ª–æ–∫–∏',
    'HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥—ã',
    '–í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö',
    '–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è',
    '–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫'
  ];
  
  for (const endpoint of endpoints) {
    const routePath = endpoint.path.replace('/api/', 'app/api/').replace('test-payment-id', '[id]') + '/route.ts';
    const fullPath = path.join(process.cwd(), routePath);
    
    if (fs.existsSync(fullPath)) {
      const content = fs.readFileSync(fullPath, 'utf8');
      
      console.log(`üìù –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤ ${endpoint.path}:`);
      console.log(`   ${content.includes('try') ? '‚úÖ' : '‚ùå'} try...catch –±–ª–æ–∫–∏`);
      console.log(`   ${content.includes('status:') ? '‚úÖ' : '‚ùå'} HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥—ã`);
      console.log(`   ${content.includes('auth()') ? '‚úÖ' : '‚ùå'} –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è`);
      console.log(`   ${content.includes('console.error') ? '‚úÖ' : '‚ùå'} –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫`);
      console.log('');
    }
  }

  // –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  console.log('üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Payment API endpoints –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\n');
  
  const results = {
    endpointsCreated: 3,
    methodsImplemented: 5, // GET/POST create, GET/POST webhook, GET [id]
    validationSchemas: 4,
    integrationFunctions: 4,
    timestamp: new Date().toISOString()
  };
  
  console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Payment API:');
  console.log(`‚úÖ Endpoints —Å–æ–∑–¥–∞–Ω—ã: ${results.endpointsCreated}/3`);
  console.log(`‚úÖ HTTP –º–µ—Ç–æ–¥—ã —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã: ${results.methodsImplemented}/5`);
  console.log(`‚úÖ –°—Ö–µ–º—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏: ${results.validationSchemas}/4`);
  console.log(`‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Payment Service: ${results.integrationFunctions}/4`);
  console.log(`üïê –í—Ä–µ–º—è: ${results.timestamp}`);
  
  console.log('\nüöÄ API endpoints –≥–æ—Ç–æ–≤—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ/Postman');
  console.log('üí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ: npm run dev');
  
  return results;
}

main().catch(console.error);
