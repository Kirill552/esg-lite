#!/usr/bin/env node
/**
 * –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ –≤—ã–±—Ä–æ—Å–æ–≤ 296-–§–ó
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã —Å–æ–≥–ª–∞—Å–Ω–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –Ω–æ—Ä–º–∞—Ç–∏–≤–∞–º IPCC
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * node scripts/update-emission-factors.js
 * node scripts/update-emission-factors.js --check-only  # —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
 */

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

// –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã IPCC AR6 (2025)
const CURRENT_COEFFICIENTS = {
  CO2: 1,      // –Ω–µ–∏–∑–º–µ–Ω–Ω–æ
  CH4: 28,     // –±—ã–ª–æ 25 –≤ AR4, —Ç–µ–ø–µ—Ä—å 28 –≤ AR6
  N2O: 265,    // –±—ã–ª–æ 298 –≤ AR4, —Ç–µ–ø–µ—Ä—å 265 –≤ AR6
  HFC: 1300,   // —Å—Ä–µ–¥–Ω–∏–π –¥–ª—è HFC-134a (–Ω–∞–∏–±–æ–ª–µ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–π)
  PFC: 6630,   // ≈õred–Ω–∏–π –¥–ª—è PFC-14 (CF4, –Ω–∞–∏–±–æ–ª–µ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–π)
  SF6: 23500   // –±—ã–ª–æ 22800 –≤ AR4, —Ç–µ–ø–µ—Ä—å 23500 –≤ AR6
};

const VERSION_INFO = {
  version: 'AR6-2025',
  name: 'IPCC AR6 –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã 2025',
  description: '–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã IPCC AR6 —Å–æ–≥–ª–∞—Å–Ω–æ –†–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—é –ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –†–§ –æ—Ç 04.04.2025 ‚Ññ 805-—Ä',
  effectiveFrom: '2025-01-01',
  source: 'IPCC Sixth Assessment Report (2021) + –†–§ 805-—Ä',
  updatedAt: new Date().toISOString()
};

function log(message) {
  console.log(`[${new Date().toISOString()}] ${message}`);
}

function checkCurrentCoefficients() {
  log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤...');
  
  const calculatorPath = path.join(__dirname, '..', 'lib', 'emission-calculator.ts');
  
  if (!fs.existsSync(calculatorPath)) {
    log('‚ùå –§–∞–π–ª emission-calculator.ts –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return false;
  }
  
  const content = fs.readFileSync(calculatorPath, 'utf8');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –≤ GWP_VALUES_2025
  const gwp2025Match = content.match(/GWP_VALUES_2025\s*=\s*{[^}]*}/s);
  
  if (!gwp2025Match) {
    log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ GWP_VALUES_2025 –≤ —Ñ–∞–π–ª–µ');
    return false;
  }
  
  const gwp2025Block = gwp2025Match[0];
  const ch4Match = gwp2025Block.match(/CH4:\s*(\d+)/);
  const n2oMatch = gwp2025Block.match(/N2O:\s*(\d+)/);
  const sf6Match = gwp2025Block.match(/SF6:\s*(\d+)/);
  
  if (!ch4Match || !n2oMatch || !sf6Match) {
    log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –≤ GWP_VALUES_2025');
    return false;
  }
  
  const currentCH4 = parseInt(ch4Match[1]);
  const currentN2O = parseInt(n2oMatch[1]);
  const currentSF6 = parseInt(sf6Match[1]);
  
  log(`–¢–µ–∫—É—â–∏–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã: CH4=${currentCH4}, N2O=${currentN2O}, SF6=${currentSF6}`);
  log(`–¢—Ä–µ–±—É–µ–º—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã: CH4=${CURRENT_COEFFICIENTS.CH4}, N2O=${CURRENT_COEFFICIENTS.N2O}, SF6=${CURRENT_COEFFICIENTS.SF6}`);
  
  const isUpToDate = (
    currentCH4 === CURRENT_COEFFICIENTS.CH4 &&
    currentN2O === CURRENT_COEFFICIENTS.N2O &&
    currentSF6 === CURRENT_COEFFICIENTS.SF6
  );
  
  if (isUpToDate) {
    log('‚úÖ –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã —É–∂–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã');
    return true;
  } else {
    log('‚ö†Ô∏è –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã —Ç—Ä–µ–±—É—é—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
    return false;
  }
}

function updateCoefficients() {
  log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤...');
  
  const calculatorPath = path.join(__dirname, '..', 'lib', 'emission-calculator.ts');
  let content = fs.readFileSync(calculatorPath, 'utf8');
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –≤ GWP_VALUES_2025
  content = content.replace(
    /(GWP_VALUES_2025\s*=\s*{[^}]*CH4:\s*)(\d+)/,
    `$1${CURRENT_COEFFICIENTS.CH4}`
  );
  
  content = content.replace(
    /(GWP_VALUES_2025\s*=\s*{[^}]*N2O:\s*)(\d+)/,
    `$1${CURRENT_COEFFICIENTS.N2O}`
  );
  
  content = content.replace(
    /(GWP_VALUES_2025\s*=\s*{[^}]*SF6:\s*)(\d+)/,
    `$1${CURRENT_COEFFICIENTS.SF6}`
  );
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å –¥–∞—Ç–æ–π –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  const dateComment = `// –û–±–Ω–æ–≤–ª–µ–Ω–æ ${new Date().toLocaleDateString('ru-RU')} —Å–æ–≥–ª–∞—Å–Ω–æ ${VERSION_INFO.source}`;
  content = content.replace(
    /(export const GWP_VALUES_2025 = {)/,
    `${dateComment}\n$1`
  );
  
  fs.writeFileSync(calculatorPath, content, 'utf8');
  log('‚úÖ –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ emission-calculator.ts');
}

function createUpdateLog() {
  log('üìù –°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–≥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...');
  
  const logPath = path.join(__dirname, '..', 'logs', 'emission-factors-updates.json');
  const logsDir = path.dirname(logPath);
  
  if (!fs.existsSync(logsDir)) {
    fs.mkdirSync(logsDir, { recursive: true });
  }
  
  let logs = [];
  if (fs.existsSync(logPath)) {
    try {
      logs = JSON.parse(fs.readFileSync(logPath, 'utf8'));
    } catch (e) {
      log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ª–æ–≥, —Å–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π');
    }
  }
  
  logs.push({
    ...VERSION_INFO,
    coefficients: CURRENT_COEFFICIENTS,
    timestamp: new Date().toISOString(),
    method: 'script'
  });
  
  fs.writeFileSync(logPath, JSON.stringify(logs, null, 2), 'utf8');
  log(`‚úÖ –õ–æ–≥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${logPath}`);
}

function generateMigrationSQL() {
  log('üóÉÔ∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SQL –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
  
  const sqlPath = path.join(__dirname, '..', 'sql', 'update-emission-factors-2025.sql');
  const sqlDir = path.dirname(sqlPath);
  
  if (!fs.existsSync(sqlDir)) {
    fs.mkdirSync(sqlDir, { recursive: true });
  }
  
  const sql = `-- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ –≤—ã–±—Ä–æ—Å–æ–≤ —Å–æ–≥–ª–∞—Å–Ω–æ IPCC AR6 (2025)
-- –°–æ–∑–¥–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ ${new Date().toISOString()}

-- –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã
UPDATE emission_factors 
SET "isActive" = false, "effectiveTo" = '2024-12-31T23:59:59.000Z'
WHERE "isActive" = true;

-- –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã
INSERT INTO emission_factors (
  "version", 
  "name", 
  "description", 
  "effectiveFrom", 
  "isActive", 
  "source", 
  "coefficients"
) VALUES (
  '${VERSION_INFO.version}',
  '${VERSION_INFO.name}',
  '${VERSION_INFO.description}',
  '${VERSION_INFO.effectiveFrom}T00:00:00.000Z',
  true,
  '${VERSION_INFO.source}',
  '${JSON.stringify(CURRENT_COEFFICIENTS)}'
) ON CONFLICT ("version") DO UPDATE SET
  "coefficients" = EXCLUDED."coefficients",
  "updatedAt" = CURRENT_TIMESTAMP;

-- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
SELECT * FROM emission_factors WHERE "isActive" = true ORDER BY "effectiveFrom" DESC LIMIT 1;
`;
  
  fs.writeFileSync(sqlPath, sql, 'utf8');
  log(`‚úÖ SQL —Å–∫—Ä–∏–ø—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${sqlPath}`);
}

function showHelp() {
  console.log(`
üìä –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ –≤—ã–±—Ä–æ—Å–æ–≤ 296-–§–ó

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
  node scripts/update-emission-factors.js           # –ü–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
  node scripts/update-emission-factors.js --check   # –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞
  node scripts/update-emission-factors.js --help    # –°–ø—Ä–∞–≤–∫–∞

–ß—Ç–æ –¥–µ–ª–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç:
  ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ –≤ –∫–æ–¥–µ
  ‚úÖ –û–±–Ω–æ–≤–ª—è–µ—Ç —Ñ–∞–π–ª lib/emission-calculator.ts
  ‚úÖ –°–æ–∑–¥–∞–µ—Ç –ª–æ–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π
  ‚úÖ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç SQL –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ë–î

–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã IPCC AR6 (2025):
  CO2: 1 (–Ω–µ–∏–∑–º–µ–Ω–Ω–æ)
  CH4: 28 (–±—ã–ª–æ 25)
  N2O: 265 (–±—ã–ª–æ 298)  
  HFC: 1300 (—Å—Ä–µ–¥–Ω–∏–π)
  PFC: 6630 (—Å—Ä–µ–¥–Ω–∏–π)
  SF6: 23500 (–±—ã–ª–æ 22800)

–ò—Å—Ç–æ—á–Ω–∏–∫: –†–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–µ –ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –†–§ –æ—Ç 04.04.2025 ‚Ññ 805-—Ä
`);
}

// –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
function main() {
  const args = process.argv.slice(2);
  
  if (args.includes('--help') || args.includes('-h')) {
    showHelp();
    return;
  }
  
  log('üöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ 296-–§–ó');
  log(`–í–µ—Ä—Å–∏—è: ${VERSION_INFO.version}`);
  log(`–ò—Å—Ç–æ—á–Ω–∏–∫: ${VERSION_INFO.source}`);
  
  const isCheckOnly = args.includes('--check') || args.includes('--check-only');
  
  const isUpToDate = checkCurrentCoefficients();
  
  if (isCheckOnly) {
    if (isUpToDate) {
      log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –∞–∫—Ç—É–∞–ª—å–Ω—ã');
      process.exit(0);
    } else {
      log('‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ');
      process.exit(1);
    }
  }
  
  if (isUpToDate) {
    log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è');
    return;
  }
  
  try {
    updateCoefficients();
    createUpdateLog();
    generateMigrationSQL();
    
    log('üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    log('üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    log('   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ lib/emission-calculator.ts');
    log('   2. –ü—Ä–∏–º–µ–Ω–∏—Ç–µ SQL —Å–∫—Ä–∏–ø—Ç –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –¥–µ–ø–ª–æ–µ');
    log('   3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π');
    
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: ${error.message}`);
    process.exit(1);
  }
}

if (require.main === module) {
  main();
}
