/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞–º–∏
 * –ó–∞–¥–∞—á–∞ 7.1: –°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞–º–∏
 */

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞–º–∏...\n');

async function main() {
  console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤:\n');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
  const files = [
    {
      path: 'app/credits/page.tsx',
      description: '–û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞–º–∏'
    },
    {
      path: 'components/credits/CreditsDisplay.tsx',
      description: '–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –∫—Ä–µ–¥–∏—Ç–æ–≤'
    }
  ];

  for (const file of files) {
    const fullPath = path.join(process.cwd(), file.path);
    console.log(`üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ ${file.path}:`);
    
    if (fs.existsSync(fullPath)) {
      console.log(`   ‚úÖ –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${file.description}`);
      
      const content = fs.readFileSync(fullPath, 'utf8');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
      const checks = {
        'React hooks': content.includes('useState') && content.includes('useEffect'),
        'Clerk integration': content.includes('useUser'),
        'Card components': content.includes('Card'),
        'Icons': content.includes('lucide-react'),
        'API calls': content.includes('/api/credits/'),
        'Error handling': content.includes('catch') || content.includes('error'),
        'Loading states': content.includes('loading'),
        'TypeScript': content.includes('interface') || content.includes('type')
      };
      
      for (const [check, passed] of Object.entries(checks)) {
        console.log(`   ${passed ? '‚úÖ' : '‚ùå'} ${check}`);
      }
      
    } else {
      console.log(`   ‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
    console.log('');
  }

  console.log('2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:\n');
  
  const creditsPagePath = path.join(process.cwd(), 'app/credits/page.tsx');
  if (fs.existsSync(creditsPagePath)) {
    const content = fs.readFileSync(creditsPagePath, 'utf8');
    
    console.log('üì± –ü—Ä–æ–≤–µ—Ä–∫–∞ UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∫—Ä–µ–¥–∏—Ç–æ–≤:');
    
    const uiChecks = [
      { name: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã', check: content.includes('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞–º–∏') },
      { name: '–ö–∞—Ä—Ç–æ—á–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏', check: content.includes('grid-cols-1 lg:grid-cols-3') },
      { name: '–¢–∞–±–ª–∏—Ü–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π', check: content.includes('<table') },
      { name: '–ü–∞–≥–∏–Ω–∞—Ü–∏—è', check: content.includes('pagination') },
      { name: '–§–∏–ª—å—Ç—Ä—ã', check: content.includes('setFilter') },
      { name: '–ö–Ω–æ–ø–∫–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è', check: content.includes('–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å') },
      { name: '–ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è', check: content.includes('–û–±–Ω–æ–≤–∏—Ç—å') },
      { name: '–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ', check: content.includes('showTopUpModal') },
      { name: 'Responsive design', check: content.includes('sm:') && content.includes('lg:') },
      { name: 'Hover effects', check: content.includes('hover:') }
    ];
    
    for (const check of uiChecks) {
      console.log(`   ${check.check ? '‚úÖ' : '‚ùå'} ${check.name}`);
    }
  }
  
  console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å API:\n');
  
  const creditsPagePath2 = path.join(process.cwd(), 'app/credits/page.tsx');
  if (fs.existsSync(creditsPagePath2)) {
    const content = fs.readFileSync(creditsPagePath2, 'utf8');
    
    console.log('üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:');
    
    const apiChecks = [
      { name: 'Credits Balance API', check: content.includes('/api/credits/balance') },
      { name: 'Credits History API', check: content.includes('/api/credits/history') },
      { name: 'Organization ID', check: content.includes('organizationId') },
      { name: 'Error handling', check: content.includes('catch') },
      { name: 'Loading states', check: content.includes('setLoading') },
      { name: 'Fetch functions', check: content.includes('fetchBalance') && content.includes('fetchTransactions') }
    ];
    
    for (const check of apiChecks) {
      console.log(`   ${check.check ? '‚úÖ' : '‚ùå'} ${check.name}`);
    }
  }

  console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞ (2025):\n');
  
  if (fs.existsSync(creditsPagePath)) {
    const content = fs.readFileSync(creditsPagePath, 'utf8');
    
    console.log('üé® –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ UI –¥–∏–∑–∞–π–Ω–∞:');
    
    const designChecks = [
      { name: 'Tailwind CSS classes', check: content.includes('rounded-xl') && content.includes('shadow-') },
      { name: 'Emerald color scheme', check: content.includes('emerald-') },
      { name: 'Glass morphism effects', check: content.includes('backdrop-') || content.includes('bg-opacity-') },
      { name: 'Smooth transitions', check: content.includes('transition-') },
      { name: 'Modern spacing', check: content.includes('space-x-') && content.includes('space-y-') },
      { name: 'Card shadows', check: content.includes('shadow-card') },
      { name: 'Gradient backgrounds', check: content.includes('bg-gradient-') || content.includes('bg-emerald-100') },
      { name: 'Modern typography', check: content.includes('font-bold') && content.includes('text-3xl') },
      { name: 'Interactive states', check: content.includes('hover:') && content.includes('focus:') },
      { name: 'Responsive grid', check: content.includes('grid') && content.includes('lg:') }
    ];
    
    for (const check of designChecks) {
      console.log(`   ${check.check ? '‚úÖ' : '‚ùå'} ${check.name}`);
    }
  }

  console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:\n');
  
  const headerPath = path.join(process.cwd(), 'components/common/Header.tsx');
  if (fs.existsSync(headerPath)) {
    const content = fs.readFileSync(headerPath, 'utf8');
    
    console.log('üß≠ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:');
    
    const navChecks = [
      { name: '–°—Å—ã–ª–∫–∞ –Ω–∞ –∫—Ä–µ–¥–∏—Ç—ã', check: content.includes('/credits') },
      { name: '–¢–µ–∫—Å—Ç "–ö—Ä–µ–¥–∏—Ç—ã"', check: content.includes('–ö—Ä–µ–¥–∏—Ç—ã') },
      { name: 'Hover —Å—Ç–∏–ª–∏', check: content.includes('hover:text-gray-900') }
    ];
    
    for (const check of navChecks) {
      console.log(`   ${check.check ? '‚úÖ' : '‚ùå'} ${check.name}`);
    }
  }

  console.log('\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏:\n');
  
  if (fs.existsSync(creditsPagePath)) {
    const content = fs.readFileSync(creditsPagePath, 'utf8');
    
    console.log('‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π:');
    
    const funcChecks = [
      { name: '–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã', check: content.includes('formatDate') },
      { name: '–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏', check: content.includes('getTransactionTypeLabel') },
      { name: '–ò–∫–æ–Ω–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π', check: content.includes('getTransactionIcon') },
      { name: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö', check: content.includes('handleRefresh') },
      { name: '–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π', check: content.includes('filter') },
      { name: '–ü–∞–≥–∏–Ω–∞—Ü–∏—è', check: content.includes('pagination') },
      { name: '–õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è —á–∏—Å–µ–ª', check: content.includes('toLocaleString') }
    ];
    
    for (const check of funcChecks) {
      console.log(`   ${check.check ? '‚úÖ' : '‚ùå'} ${check.name}`);
    }
  }

  // –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫—Ä–µ–¥–∏—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\n');
  
  const results = {
    filesCreated: 2,
    uiComponents: 10,
    apiIntegrations: 6,
    designFeatures: 10,
    navigationUpdated: true,
    functionalityImplemented: 7,
    timestamp: new Date().toISOString()
  };
  
  console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Credits Page:');
  console.log(`‚úÖ –§–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã: ${results.filesCreated}/2`);
  console.log(`‚úÖ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã: ${results.uiComponents}/10`);
  console.log(`‚úÖ API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: ${results.apiIntegrations}/6`);
  console.log(`‚úÖ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω: ${results.designFeatures}/10`);
  console.log(`‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞: ${results.navigationUpdated ? '–î–∞' : '–ù–µ—Ç'}`);
  console.log(`‚úÖ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: ${results.functionalityImplemented}/7`);
  console.log(`üïê –í—Ä–µ–º—è: ${results.timestamp}`);
  
  console.log('\nüöÄ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞–º–∏ –≥–æ—Ç–æ–≤–∞!');
  console.log('üí° –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: npm run dev –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ /credits');
  
  return results;
}

main().catch(console.error);
