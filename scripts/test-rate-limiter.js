/**
 * –¢–µ—Å—Ç Rate Limiter —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º —Å –∑–∞–≥–ª—É—à–∫–∞–º–∏ –∫—Ä–µ–¥–∏—Ç–æ–≤ –∏ surge-pricing
 */

require('dotenv').config();

async function testRateLimiter() {
  console.log('üîß –¢–µ—Å—Ç Rate Limiter —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏...');
  
  try {
    // –°–∏–º—É–ª–∏—Ä—É–µ–º Rate Limiter –±–µ–∑ –ø—Ä—è–º–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ TypeScript –º–æ–¥—É–ª—è
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Rate Limiter...');
    
    // –¢–µ—Å—Ç 1: –°–∏–º—É–ª—è—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Rate Limiter
    console.log('\nüìã –¢–µ—Å—Ç 1: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Rate Limiter...');
    
    const config = {
      windowSizeMs: 60 * 60 * 1000,  // 1 —á–∞—Å
      maxRequests: 100,              // 100 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —á–∞—Å
      cleanupIntervalMs: 5 * 60 * 1000 // –û—á–∏—Å—Ç–∫–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
    };
    
    console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Rate Limiter:', {
      windowSizeMs: config.windowSizeMs,
      maxRequests: config.maxRequests,
      cleanupIntervalMs: config.cleanupIntervalMs
    });
    
    // –¢–µ—Å—Ç 2: –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–º–∏—Ç–æ–≤
    console.log('\nüìã –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤...');
    
    const testOrganizations = [
      'test-org-1',
      'test-org-2',
      'test-org-no-credits'
    ];
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∫—Ä–µ–¥–∏—Ç–æ–≤ (–∑–∞–≥–ª—É—à–∫–∞)
    function simulateHasCredits(orgId) {
      if (orgId === 'test-org-no-credits') {
        return false; // –ù–µ—Ç –∫—Ä–µ–¥–∏—Ç–æ–≤
      }
      return true; // –ï—Å—Ç—å –∫—Ä–µ–¥–∏—Ç—ã
    }
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º surge –ø–µ—Ä–∏–æ–¥ (–∑–∞–≥–ª—É—à–∫–∞)
    function simulateIsSurgePeriod() {
      const now = new Date();
      const month = now.getMonth() + 1; // 1-12
      const day = now.getDate();
      
      // Surge –ø–µ—Ä–∏–æ–¥: 15-30 –∏—é–Ω—è
      return month === 6 && day >= 15 && day <= 30;
    }
    
    // –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–º–∏—Ç–∞
    function simulateCheckLimit(organizationId, currentCount = 0) {
      console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–∞ –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: ${organizationId}`);
      
      // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–µ–¥–∏—Ç—ã
      const hasCredits = simulateHasCredits(organizationId);
      if (!hasCredits) {
        console.log(`‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –¥–ª—è ${organizationId}`);
        return {
          allowed: false,
          remaining: 0,
          resetTime: new Date(),
          reason: 'INSUFFICIENT_CREDITS'
        };
      }
      
      // 2. –ü–æ–ª—É—á–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –ª–∏–º–∏—Ç —Å —É—á–µ—Ç–æ–º surge-pricing
      const isSurgePeriod = simulateIsSurgePeriod();
      let maxRequests = config.maxRequests;
      
      if (isSurgePeriod) {
        maxRequests = Math.floor(config.maxRequests * 0.5); // –£–º–µ–Ω—å—à–∞–µ–º –Ω–∞ 50%
        console.log(`‚ö° Surge –ø–µ—Ä–∏–æ–¥: –ª–∏–º–∏—Ç —É–º–µ–Ω—å—à–µ–Ω –¥–æ ${maxRequests} –¥–ª—è ${organizationId}`);
      }
      
      // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞
      if (currentCount >= maxRequests) {
        console.log(`‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –¥–ª—è ${organizationId}: ${currentCount}/${maxRequests}`);
        
        const windowEnd = new Date(Date.now() + config.windowSizeMs);
        const retryAfter = Math.ceil((windowEnd.getTime() - Date.now()) / 1000);
        
        return {
          allowed: false,
          remaining: 0,
          resetTime: windowEnd,
          retryAfter,
          reason: 'RATE_LIMIT_EXCEEDED'
        };
      }
      
      // 4. –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω
      const remaining = maxRequests - currentCount;
      const windowEnd = new Date(Date.now() + config.windowSizeMs);
      
      console.log(`‚úÖ –õ–∏–º–∏—Ç OK –¥–ª—è ${organizationId}: ${currentCount}/${maxRequests} (–æ—Å—Ç–∞–ª–æ—Å—å: ${remaining})`);
      
      return {
        allowed: true,
        remaining,
        resetTime: windowEnd
      };
    }
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
    for (const orgId of testOrganizations) {
      const result = simulateCheckLimit(orgId, 0);
      console.log(`  –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è ${orgId}:`, {
        allowed: result.allowed,
        remaining: result.remaining,
        reason: result.reason || 'OK'
      });
    }
    
    // –¢–µ—Å—Ç 3: –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞
    console.log('\nüìã –¢–µ—Å—Ç 3: –ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞...');
    
    const orgWithHighUsage = 'test-org-high-usage';
    const highUsageResult = simulateCheckLimit(orgWithHighUsage, 150); // –ü—Ä–µ–≤—ã—à–∞–µ–º –ª–∏–º–∏—Ç
    
    console.log(`  –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è ${orgWithHighUsage} (150 –∑–∞–ø—Ä–æ—Å–æ–≤):`, {
      allowed: highUsageResult.allowed,
      remaining: highUsageResult.remaining,
      reason: highUsageResult.reason,
      retryAfter: highUsageResult.retryAfter
    });
    
    // –¢–µ—Å—Ç 4: –°–∏–º—É–ª—è—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    console.log('\nüìã –¢–µ—Å—Ç 4: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–∏–º–∏—Ç–æ–≤...');
    
    function simulateGetStats(organizationId, currentCount = 0) {
      const windowStart = new Date();
      const windowEnd = new Date(windowStart.getTime() + config.windowSizeMs);
      const hasCredits = simulateHasCredits(organizationId);
      const isSurgePeriod = simulateIsSurgePeriod();
      const maxRequests = isSurgePeriod ? Math.floor(config.maxRequests * 0.5) : config.maxRequests;
      
      return {
        organizationId,
        currentCount,
        maxRequests,
        windowStart,
        windowEnd,
        hasCredits,
        isSurgePeriod
      };
    }
    
    const statsOrg = 'test-org-stats';
    const stats = simulateGetStats(statsOrg, 25);
    
    console.log(`  –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è ${statsOrg}:`, {
      currentCount: stats.currentCount,
      maxRequests: stats.maxRequests,
      hasCredits: stats.hasCredits,
      isSurgePeriod: stats.isSurgePeriod,
      usage: `${stats.currentCount}/${stats.maxRequests} (${Math.round(stats.currentCount / stats.maxRequests * 100)}%)`
    });
    
    // –¢–µ—Å—Ç 5: –°–∏–º—É–ª—è—Ü–∏—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞
    console.log('\nüìã –¢–µ—Å—Ç 5: –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞...');
    
    function simulateIncrementCounter(organizationId) {
      console.log(`üìà –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –¥–ª—è ${organizationId}`);
      
      // –°–∏–º—É–ª–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ –ë–î
      const windowStart = new Date();
      console.log(`üíæ –ë–î –æ–±–Ω–æ–≤–ª–µ–Ω–∞: organizationId=${organizationId}, windowStart=${windowStart.toISOString()}`);
      console.log(`‚úÖ –°—á–µ—Ç—á–∏–∫ —É–≤–µ–ª–∏—á–µ–Ω –¥–ª—è ${organizationId}`);
    }
    
    const incrementOrg = 'test-org-increment';
    simulateIncrementCounter(incrementOrg);
    
    // –¢–µ—Å—Ç 6: –°–∏–º—É–ª—è—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π
    console.log('\nüìã –¢–µ—Å—Ç 6: –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π...');
    
    function simulateCleanupOldRecords() {
      const cutoffTime = new Date(Date.now() - config.windowSizeMs * 2);
      const deletedCount = Math.floor(Math.random() * 10); // –°–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
      
      console.log(`üßπ –û—á–∏—Å—Ç–∫–∞ –∑–∞–ø–∏—Å–µ–π —Å—Ç–∞—Ä—à–µ ${cutoffTime.toISOString()}`);
      
      if (deletedCount > 0) {
        console.log(`üßπ –û—á–∏—â–µ–Ω–æ ${deletedCount} —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π –ª–∏–º–∏—Ç–æ–≤`);
      } else {
        console.log(`üßπ –ù–µ—Ç —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π –¥–ª—è –æ—á–∏—Å—Ç–∫–∏`);
      }
    }
    
    simulateCleanupOldRecords();
    
    // –¢–µ—Å—Ç 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –∑–∞–≥–ª—É—à–∫–∞–º–∏
    console.log('\nüìã –¢–µ—Å—Ç 7: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∑–∞–≥–ª—É—à–∫–∞–º–∏...');
    
    console.log('  üîß –ó–∞–≥–ª—É—à–∫–∞ Credits Service:');
    console.log('    - hasCredits("test-org-1", 1) ‚Üí true');
    console.log('    - hasCredits("test-org-no-credits", 1) ‚Üí false');
    
    console.log('  üîß –ó–∞–≥–ª—É—à–∫–∞ Surge Pricing Service:');
    const isSurge = simulateIsSurgePeriod();
    console.log(`    - isSurgePeriod() ‚Üí ${isSurge}`);
    console.log(`    - getSurgeMultiplier() ‚Üí ${isSurge ? 0.5 : 1.0}`);
    
    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã Rate Limiter –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
    console.log('‚úÖ –ó–∞–¥–∞—á–∞ 5.1 —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞: Rate Limiter –∫–æ–º–ø–æ–Ω–µ–Ω—Ç');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testRateLimiter()
  .then(() => {
    console.log('‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Rate Limiter –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    process.exit(0);
  })
  .catch((error) => {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
    process.exit(1);
  });