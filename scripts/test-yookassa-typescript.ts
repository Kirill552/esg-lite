/**
 * –¢–µ—Å—Ç TypeScript –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ YooKassa
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ç–∏–ø–∏–∑–∞—Ü–∏–∏ –∏ –∏–º–ø–æ—Ä—Ç–æ–≤
 */

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∞
require('dotenv').config({ path: '.env.test' });

import { 
  getYooKassaConfig, 
  createYooKassaClient, 
  validateWebhookSignature,
  PaymentType,
  PAYMENT_CONSTANTS,
  logYooKassaOperation
} from '../lib/yookassa-config';

async function testYooKassaTypeScript() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ TypeScript –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ YooKassa...\n');

  try {
    // 1. –¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ getYooKassaConfig():');
    const config = getYooKassaConfig();
    console.log('- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞:', !!config ? '‚úÖ' : '‚ùå');
    console.log('- Shop ID:', config.shopId);
    console.log('- –û–∫—Ä—É–∂–µ–Ω–∏–µ:', config.isProduction ? 'Production' : 'Test');
    console.log('- –í–∞–ª—é—Ç–∞:', config.currency);

    // 2. –¢–µ—Å—Ç –∫–ª–∏–µ–Ω—Ç–∞
    console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ createYooKassaClient():');
    const client = createYooKassaClient();
    console.log('- –ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω:', !!client ? '‚úÖ' : '‚ùå');
    console.log('- –¢–∏–ø –∫–ª–∏–µ–Ω—Ç–∞:', typeof client);

    // 3. –¢–µ—Å—Ç –∫–æ–Ω—Å—Ç–∞–Ω—Ç
    console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç:');
    console.log('- PAYMENT_CONSTANTS:', !!PAYMENT_CONSTANTS ? '‚úÖ' : '‚ùå');
    console.log('- –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞:', PAYMENT_CONSTANTS.MIN_AMOUNT, '—Ä—É–±.');
    console.log('- –ú–µ—Ç–æ–¥—ã –æ–ø–ª–∞—Ç—ã:', PAYMENT_CONSTANTS.PAYMENT_METHODS.length, '–º–µ—Ç–æ–¥–æ–≤');

    // 4. –¢–µ—Å—Ç enum
    console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PaymentType enum:');
    console.log('- PaymentType.CREDITS:', PaymentType.CREDITS);
    console.log('- PaymentType.SUBSCRIPTION:', PaymentType.SUBSCRIPTION);
    console.log('- PaymentType.MARKETPLACE:', PaymentType.MARKETPLACE);

    // 5. –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ webhook (—Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏)
    console.log('\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ validateWebhookSignature():');
    const testBody = '{"test": "data"}';
    const testHeaders = {
      'yookassa-signature': 'invalid_signature'
    };
    const isValid = validateWebhookSignature(testBody, testHeaders);
    console.log('- –í–∞–ª–∏–¥–∞—Ü–∏—è (–æ–∂–∏–¥–∞–µ—Ç—Å—è false):', isValid ? '‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ true' : '‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ false');

    // 6. –¢–µ—Å—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    console.log('\n6Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ logYooKassaOperation():');
    logYooKassaOperation('test_operation', { 
      testData: 'value',
      amount: 1000
    }, 'info');

    console.log('\nüéâ –í—Å–µ TypeScript —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
    console.log('‚úÖ –ó–∞–¥–∞—á–∞ 6.1 –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–∞');
    
    return {
      success: true,
      message: 'TypeScript –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ',
      timestamp: new Date().toISOString()
    };

  } catch (error) {
    const errorMessage = error instanceof Error ? error.message : String(error);
    const errorStack = error instanceof Error ? error.stack : undefined;
    
    console.error('\n‚ùå –û—à–∏–±–∫–∞ TypeScript —Ç–µ—Å—Ç–∞:', errorMessage);
    if (errorStack) {
      console.error('Stack:', errorStack);
    }
    
    return {
      success: false,
      error: errorMessage,
      timestamp: new Date().toISOString()
    };
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testYooKassaTypeScript()
  .then((result) => {
    console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç TypeScript —Ç–µ—Å—Ç–∞:', result);
    process.exit(result.success ? 0 : 1);
  })
  .catch((error) => {
    console.error('\n‚ùå TypeScript —Ç–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω:', error);
    process.exit(1);
  });
