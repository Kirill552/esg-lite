/**
 * Debug endpoint –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤
 */

import { NextRequest, NextResponse } from 'next/server';

export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    
    console.log('üîç DEBUG: –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', JSON.stringify(body, null, 2));
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
    const analysis = {
      hasCompanyData: !!body.companyData,
      hasEmissionData: !!body.emissionData,
      hasSignerData: !!body.signerData,
      hasGoodsData: !!body.goodsData,
      reportType: body.reportType,
      
      companyDataKeys: body.companyData ? Object.keys(body.companyData) : [],
      emissionDataKeys: body.emissionData ? Object.keys(body.emissionData) : [],
      signerDataKeys: body.signerData ? Object.keys(body.signerData) : [],
      
      // –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ –ø–æ–ª—è
      extractedData: {
        org_name: body.companyData?.companyName || body.emissionData?.companyName || '–ù–ï –ù–ê–ô–î–ï–ù–û',
        org_inn: body.companyData?.inn || body.emissionData?.inn || '–ù–ï –ù–ê–ô–î–ï–ù–û',
        org_address: body.companyData?.address || body.emissionData?.address || '–ù–ï –ù–ê–ô–î–ï–ù–û',
        signer_name: body.signerData?.name || '–ù–ï –ù–ê–ô–î–ï–ù–û',
        report_year: body.emissionData?.reportingPeriod || body.reportPeriod || '–ù–ï –ù–ê–ô–î–ï–ù–û'
      }
    };
    
    console.log('üìä DEBUG: –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö:', JSON.stringify(analysis, null, 2));
    
    return NextResponse.json({
      success: true,
      receivedData: body,
      analysis,
      timestamp: new Date().toISOString()
    });
    
  } catch (error) {
    console.error('‚ùå DEBUG: –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö:', error);
    
    return NextResponse.json({
      success: false,
      error: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
      timestamp: new Date().toISOString()
    }, { status: 500 });
  }
}