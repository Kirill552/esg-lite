/**
 * –°–∏—Å—Ç–µ–º–∞ –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ—Ç–æ–¥–∏–∫ –∏ —Ñ–∞–∫—Ç–æ—Ä–æ–≤ –≤—ã–±—Ä–æ—Å–æ–≤
 * 
 * –†–µ–∞–ª–∏–∑—É–µ—Ç –∑–∞–¥–∞—á—É 1.1.13: –¢–æ—á–Ω–æ—Å—Ç—å —Ä–∞—Å—á–µ—Ç–æ–≤ –∏ –∑–∞—â–∏—Ç–∞ –æ—Ç –ø—Ä–µ—Ç–µ–Ω–∑–∏–π
 * 
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç:
 * - –í–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∏–∫ –∏ —Ñ–∞–∫—Ç–æ—Ä–æ–≤ (method_id, factor_id, version, source_url, valid_from/to)
 * - –î–≤–æ–π–Ω–æ–π —Ä–∞—Å—á–µ—Ç —á–µ—Ä–µ–∑ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–π –¥–≤–∏–∂–æ–∫ —Å –¥–æ–ø—É—Å–∫–æ–º ¬±0.1%
 * - –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—é –µ–¥–∏–Ω–∏—Ü —á–µ—Ä–µ–∑ units.ts
 */

import { z } from 'zod';

// –°—Ö–µ–º—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
export const MethodVersionSchema = z.object({
  method_id: z.string().min(1, 'Method ID –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π'),
  version: z.string().regex(/^v\d{4}-\d{2}-\d{2}$/, '–§–æ—Ä–º–∞—Ç –≤–µ—Ä—Å–∏–∏: vYYYY-MM-DD'),
  source_url: z.string().url('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL –∏—Å—Ç–æ—á–Ω–∏–∫–∞'),
  valid_from: z.string().datetime('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –¥–µ–π—Å—Ç–≤–∏—è'),
  valid_to: z.string().datetime().nullable(),
  description: z.string().min(1, '–û–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∏–∫–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ'),
  approved_by: z.string().min(1, '–£—Ç–≤–µ—Ä–∂–¥–∞—é—â–µ–µ –ª–∏—Ü–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ'),
  created_at: z.string().datetime(),
  hash: z.string().min(32, 'Hash –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 32 —Å–∏–º–≤–æ–ª–æ–≤')
});

export const FactorVersionSchema = z.object({
  factor_id: z.string().min(1, 'Factor ID –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π'),
  method_id: z.string().min(1, 'Method ID –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π'),
  version: z.string().regex(/^v\d{4}-\d{2}-\d{2}$/, '–§–æ—Ä–º–∞—Ç –≤–µ—Ä—Å–∏–∏: vYYYY-MM-DD'),
  name: z.string().min(1, '–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–∫—Ç–æ—Ä–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ'),
  category: z.string().min(1, '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è'),
  unit: z.string().min(1, '–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è'),
  value: z.number().positive('–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º'),
  uncertainty: z.number().min(0).max(1).nullable(),
  source: z.string().nullable(),
  valid_from: z.string().datetime('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –¥–µ–π—Å—Ç–≤–∏—è'),
  valid_to: z.string().datetime().nullable(),
  created_at: z.string().datetime(),
  created_by: z.string().min(1, '–°–æ–∑–¥–∞—Ç–µ–ª—å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω')
});

export const CalculationSnapshotSchema = z.object({
  snapshot_id: z.string().uuid('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π UUID —Å–Ω–∞–ø—à–æ—Ç–∞'),
  report_id: z.string().min(1, 'Report ID –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π'),
  method_versions: z.array(z.string()),
  factor_versions: z.array(z.string()),
  input_data_hash: z.string().min(32, 'Hash –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'),
  calculation_timestamp: z.string().datetime(),
  approved_by: z.string().min(1, '–£—Ç–≤–µ—Ä–∂–¥–∞—é—â–µ–µ –ª–∏—Ü–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ'),
  approval_timestamp: z.string().datetime().nullable(),
  immutable: z.boolean().default(false)
});

export type MethodVersion = z.infer<typeof MethodVersionSchema>;
export type FactorVersion = z.infer<typeof FactorVersionSchema>;
export type CalculationSnapshot = z.infer<typeof CalculationSnapshotSchema>;

/**
 * –ú–µ–Ω–µ–¥–∂–µ—Ä –≤–µ—Ä—Å–∏–π –º–µ—Ç–æ–¥–∏–∫ –∏ —Ñ–∞–∫—Ç–æ—Ä–æ–≤
 */
export class VersionManager {
  private static readonly CALCULATION_TOLERANCE = 0.001; // ¬±0.1%
  
  /**
   * –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é –º–µ—Ç–æ–¥–∏–∫–∏
   */
  static async createMethodVersion(data: {
    method_id: string;
    method_name: string;
    version: string;
    description: string;
    formula: string;
    parameters: Record<string, string>;
    valid_from: Date;
    valid_until: Date;
    approved_by: string;
    legal_basis: string;
  }): Promise<MethodVersion> {
    const methodVersion: MethodVersion = {
      method_id: data.method_id,
      version: data.version,
      source_url: `https://esg-lite.ru/methods/${data.method_id}/${data.version}`,
      valid_from: data.valid_from.toISOString(),
      valid_to: data.valid_until.toISOString(),
      description: `${data.description}. ${data.legal_basis}`,
      approved_by: data.approved_by,
      created_at: new Date().toISOString(),
      hash: crypto.randomUUID() // –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ - —Ö–µ—à –æ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –º–µ—Ç–æ–¥–∏–∫–∏
    };

    // –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î
    console.log(`üìù –°–æ–∑–¥–∞–Ω–∞ –º–µ—Ç–æ–¥–∏–∫–∞: ${data.method_id} v${data.version}`);
    
    return methodVersion;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é –º–µ—Ç–æ–¥–∏–∫–∏ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –¥–∞—Ç—É
   */
  static async getMethodVersion(
    methodId: string, 
    targetDate: Date = new Date()
  ): Promise<MethodVersion | null> {
    // –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ –ë–î
    // –ó–¥–µ—Å—å –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    return null;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ñ–∞–∫—Ç–æ—Ä—ã –¥–ª—è –º–µ—Ç–æ–¥–∏–∫–∏ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –¥–∞—Ç—É
   */
  static async getFactorsForMethod(
    methodId: string,
    targetDate: Date = new Date()
  ): Promise<FactorVersion[]> {
    // –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ –ë–î
    return [];
  }

  /**
   * –°–æ–∑–¥–∞—Ç—å –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–π —Å–Ω–∞–ø—à–æ—Ç —Ä–∞—Å—á–µ—Ç–∞
   */
  static async createCalculationSnapshot(
    methodId: string,
    methodVersion: string,
    validatedDataPoints: any[],
    metadata: {
      company_name: string;
      report_period: string;
      calculation_timestamp: string;
      operator: string;
      regulation_basis?: string;
    }
  ): Promise<string> {
    const snapshotId = crypto.randomUUID();
    
    const snapshot: CalculationSnapshot = {
      snapshot_id: snapshotId,
      report_id: `${methodId}_${Date.now()}`,
      method_versions: [methodVersion],
      factor_versions: [], // –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –∏–∑ validatedDataPoints
      input_data_hash: crypto.randomUUID(), // –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ - —Ö–µ—à –æ—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      calculation_timestamp: metadata.calculation_timestamp,
      approved_by: metadata.operator,
      approval_timestamp: null,
      immutable: false
    };

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ö–µ–º—ã
    const validatedSnapshot = CalculationSnapshotSchema.parse(snapshot);
    
    // –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î
    console.log(`üì∏ –°–æ–∑–¥–∞–Ω —Å–Ω–∞–ø—à–æ—Ç —Ä–∞—Å—á–µ—Ç–∞: ${snapshotId}`);
    
    return snapshotId;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞—Å—á–µ—Ç–Ω–æ–π –≤–µ–¥–æ–º–æ—Å—Ç–∏ –ø–æ —Å–Ω–∞–ø—à–æ—Ç—É
   */
  static async generateWorksheet(snapshotId: string): Promise<CalculationWorksheet> {
    // –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞ —Å–Ω–∞–ø—à–æ—Ç–∞ –∏–∑ –ë–î
    const worksheet: CalculationWorksheet = {
      calculation_id: snapshotId,
      report_id: `report_${Date.now()}`,
      formula: 'E = A √ó EF √ó (1 - C/100)',
      input_values: { A: 1000, EF: 2.1, C: 5 },
      factor_values: { EF: 2.1 },
      intermediate_results: { emission_before_control: 2100, control_reduction: 105 },
      final_result: 1995,
      units_conversion: { A: 'tonnes', E: 'tCO2eq' },
      method_version: 'v2023.12.01',
      factor_versions: ['EF_steel_v2023.12.01'],
      calculated_at: new Date().toISOString(),
      calculated_by: 'system',
      verified: true,
      verification_delta: 0.05
    };

    return worksheet;
  }

  /**
   * –£—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–Ω–∞–ø—à–æ—Ç (—Å–¥–µ–ª–∞—Ç—å –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–º)
   */
  static async approveSnapshot(
    snapshotId: string,
    approvedBy: string
  ): Promise<void> {
    // –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏:
    // 1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ —É—Ç–≤–µ—Ä–∂–¥–∞—é—â–µ–≥–æ
    // 2. –û–±–Ω–æ–≤–∏—Ç—å approval_timestamp
    // 3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å immutable = true
    // 4. –°–æ–∑–¥–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π hash –≤—Å–µ–≥–æ —Å–Ω–∞–ø—à–æ—Ç–∞
  }

  /**
   * –î–≤–æ–π–Ω–æ–π —Ä–∞—Å—á–µ—Ç –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–æ—á–Ω–æ—Å—Ç–∏
   */
  static async verifyCalculation(
    primaryResult: number,
    inputData: any,
    methodVersion: string,
    factorVersions: string[]
  ): Promise<{ verified: boolean; delta: number; secondaryResult: number }> {
    // –ù–µ–∑–∞–≤–∏—Å–∏–º—ã–π –ø–µ—Ä–µ—Å—á–µ—Ç —Å —Ç–µ–º–∏ –∂–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    const secondaryResult = await this.performSecondaryCalculation(
      inputData,
      methodVersion,
      factorVersions
    );

    const delta = Math.abs(primaryResult - secondaryResult) / primaryResult;
    const verified = delta <= this.CALCULATION_TOLERANCE;

    return {
      verified,
      delta,
      secondaryResult
    };
  }

  /**
   * –ù–µ–∑–∞–≤–∏—Å–∏–º—ã–π —Ä–∞—Å—á–µ—Ç –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
   */
  private static async performSecondaryCalculation(
    inputData: any,
    methodVersion: string,
    factorVersions: string[]
  ): Promise<number> {
    // –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ - –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –¥–≤–∏–∂–æ–∫ —Ä–∞—Å—á–µ—Ç–∞
    // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–æ–∫–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    return 0;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è hash –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –Ω–µ–∏–∑–º–µ–Ω–Ω–æ—Å—Ç–∏
   */
  static generateInputDataHash(inputData: any): string {
    // –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å crypto.subtle.digest
    const jsonString = JSON.stringify(inputData, Object.keys(inputData).sort());
    return btoa(jsonString).substring(0, 32);
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ —Å–Ω–∞–ø—à–æ—Ç–∞
   */
  static async verifySnapshotIntegrity(snapshot: CalculationSnapshot): Promise<boolean> {
    if (!snapshot.immutable) {
      return false; // –ù–µ—É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ —Å–Ω–∞–ø—à–æ—Ç—ã –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º
    }

    // –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏:
    // 1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –ø–æ–¥–ø–∏—Å–∏
    // 2. –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ –≤–µ—Ä—Å–∏–∏ –º–µ—Ç–æ–¥–∏–∫ –∏ —Ñ–∞–∫—Ç–æ—Ä–æ–≤ –Ω–µ –∏–∑–º–µ–Ω—è–ª–∏—Å—å
    // 3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç hash
    return true;
  }
}

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞—Å—á–µ—Ç–Ω–æ–π –≤–µ–¥–æ–º–æ—Å—Ç–∏
 */
export interface CalculationWorksheet {
  calculation_id: string;
  report_id: string;
  formula: string;
  input_values: Record<string, any>;
  factor_values: Record<string, number>;
  intermediate_results: Record<string, number>;
  final_result: number;
  units_conversion: Record<string, string>;
  method_version: string;
  factor_versions: string[];
  calculated_at: string;
  calculated_by: string;
  verified: boolean;
  verification_delta: number | null;
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ä–∞—Å—á–µ—Ç–Ω—ã—Ö –≤–µ–¥–æ–º–æ—Å—Ç–µ–π
 */
export class WorksheetGenerator {
  /**
   * –°–æ–∑–¥–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é —Ä–∞—Å—á–µ—Ç–Ω—É—é –≤–µ–¥–æ–º–æ—Å—Ç—å
   */
  static async generateWorksheet(
    calculationId: string,
    reportId: string,
    formula: string,
    inputValues: Record<string, any>,
    factorValues: Record<string, number>,
    methodVersion: string,
    factorVersions: string[],
    calculatedBy: string
  ): Promise<CalculationWorksheet> {
    const worksheet: CalculationWorksheet = {
      calculation_id: calculationId,
      report_id: reportId,
      formula,
      input_values: inputValues,
      factor_values: factorValues,
      intermediate_results: {},
      final_result: 0, // –ë—É–¥–µ—Ç –≤—ã—á–∏—Å–ª–µ–Ω
      units_conversion: {},
      method_version: methodVersion,
      factor_versions: factorVersions,
      calculated_at: new Date().toISOString(),
      calculated_by: calculatedBy,
      verified: false,
      verification_delta: null
    };

    return worksheet;
  }

  /**
   * –≠–∫—Å–ø–æ—Ä—Ç –≤–µ–¥–æ–º–æ—Å—Ç–∏ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞
   */
  static exportForVerification(worksheet: CalculationWorksheet): string {
    return JSON.stringify(worksheet, null, 2);
  }
}
