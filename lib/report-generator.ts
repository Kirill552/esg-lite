/**
 * –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤
 * –û–±—ä–µ–¥–∏–Ω—è–µ—Ç template-engine –∏ pdf-generator
 */

import fs from 'fs/promises';
import path from 'path';
import { processTemplate, TemplateData, ReportType } from './template-engine';
import { generateReportPDF, PDFGenerationResult } from './pdf-generator';

export interface ReportGenerationData {
  // –û–±—â–∏–µ –ø–æ–ª—è
  org_name: string;
  org_address: string;
  signer_name: string;
  signer_position?: string; // –¥–ª—è 296-FZ
  signer_pos?: string; // –¥–ª—è CBAM
  sign_date: string;
  generation_date: string;
  generation_time: string;
  document_id: string;
  
  // –ü–æ–ª—è –¥–ª—è 296-FZ
  org_inn?: string;
  org_okpo?: string;
  org_oktmo?: string;
  org_phone?: string;
  org_email?: string;
  report_year?: string;
  
  // –ü–æ–ª—è –¥–ª—è CBAM
  eori?: string;
  cbam_id?: string;
  org_country?: string;
  report_year_q?: string;
  
  // –î–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–∞—Ö/–≤—ã–±—Ä–æ—Å–∞—Ö (–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ)
  [key: string]: string | number | boolean | undefined;
}

export interface ReportGenerationOptions {
  outputDir?: string;
  templateDir?: string;
  includeMetadata?: boolean;
}

export interface ReportGenerationResult {
  success: boolean;
  filePath?: string;
  fileName?: string;
  fileSize?: number;
  templateErrors?: string[];
  unreplacedTokens?: string[];
  error?: string;
}

/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ HTML —à–∞–±–ª–æ–Ω–∞
 */
async function loadTemplate(reportType: ReportType, templateDir: string = 'templates'): Promise<string> {
  const templateFileName = reportType === '296-FZ' 
    ? 'ru-296fz-report-2025.html'
    : 'eu-cbam-quarterly-2025.html';
    
  const templatePath = path.join(templateDir, templateFileName);
  
  try {
    return await fs.readFile(templatePath, 'utf-8');
  } catch (error) {
    throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —à–∞–±–ª–æ–Ω ${templateFileName}: ${error}`);
  }
}

/**
 * –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
 */
function prepareTemplateData(
  data: ReportGenerationData, 
  reportType: ReportType,
  includeMetadata: boolean = true
): TemplateData {
  const now = new Date();
  
  const baseData: TemplateData = { ...data };
  
  if (includeMetadata) {
    // –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã
    baseData.generation_date = data.generation_date || now.toLocaleDateString('ru-RU');
    baseData.generation_time = data.generation_time || now.toLocaleTimeString('ru-RU');
    baseData.document_id = data.document_id || `${reportType}_${Date.now()}`;
    baseData.sign_date = data.sign_date || now.toLocaleDateString('ru-RU');
  }
  
  // –£–Ω–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª–µ–π –ø–æ–¥–ø–∏—Å–∞–Ω—Ç–∞
  if (reportType === '296-FZ' && data.signer_pos && !data.signer_position) {
    baseData.signer_position = data.signer_pos;
  }
  if (reportType === 'CBAM' && data.signer_position && !data.signer_pos) {
    baseData.signer_pos = data.signer_position;
  }
  
  // –ú–∞–ø–ø–∏–Ω–≥ –ø–æ–ª–µ–π –¥–ª—è —à–∞–±–ª–æ–Ω–∞ 296-FZ (–∏—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–æ–∫–µ–Ω–æ–≤)
  if (reportType === '296-FZ') {
    // –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    baseData.inn = data.org_inn || baseData.inn || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    baseData.address = data.org_address || baseData.address || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    baseData.phone = data.org_phone || baseData.phone || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    baseData.email = data.org_email || baseData.email || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    baseData.okpo = data.org_okpo || baseData.okpo || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    baseData.oktmo = data.org_oktmo || baseData.oktmo || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    
    // –ü–æ–ª—è –ø–æ–¥–ø–∏—Å–∞–Ω—Ç–∞ –¥–ª—è 296-FZ (executor)
    baseData.executor_fio = data.signer_name || baseData.executor_fio || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    baseData.executor_phone = data.org_phone || baseData.executor_phone || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è 296-FZ
    baseData.legal_form = baseData.legal_form || '–û–û–û';
    baseData.ogrn = baseData.ogrn || data.org_okpo || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    baseData.okved = baseData.okved || '38.11';
    baseData.submission_basis = baseData.submission_basis || '–ø. 4 —Å—Ç. 23 296-–§–ó';
    
    // –î–∞–Ω–Ω—ã–µ –æ –≤—ã–±—Ä–æ—Å–∞—Ö (–∑–∞–ø–æ–ª–Ω—è–µ–º –±–∞–∑–æ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã)
    baseData.co2_mass = baseData.co2_mass || '0';
    baseData.co2e_co2 = baseData.co2e_co2 || '0';
    baseData.co2_percent = baseData.co2_percent || '0';
    baseData.ch4_mass = baseData.ch4_mass || '0';
    baseData.co2e_ch4 = baseData.co2e_ch4 || '0';
    baseData.ch4_percent = baseData.ch4_percent || '0';
    baseData.n2o_mass = baseData.n2o_mass || '0';
    baseData.co2e_n2o = baseData.co2e_n2o || '0';
    baseData.n2o_percent = baseData.n2o_percent || '0';
    baseData.hfc_mass = baseData.hfc_mass || '0';
    baseData.hfc_gwp = baseData.hfc_gwp || '0';
    baseData.co2e_hfc = baseData.co2e_hfc || '0';
    baseData.hfc_percent = baseData.hfc_percent || '0';
    baseData.pfc_mass = baseData.pfc_mass || '0';
    baseData.pfc_gwp = baseData.pfc_gwp || '0';
    baseData.co2e_pfc = baseData.co2e_pfc || '0';
    baseData.pfc_percent = baseData.pfc_percent || '0';
    baseData.sf6_mass = baseData.sf6_mass || '0';
    baseData.co2e_sf6 = baseData.co2e_sf6 || '0';
    baseData.sf6_percent = baseData.sf6_percent || '0';
    baseData.total_co2e = baseData.total_co2e || '0';
    
    // –ü—Ä–æ—Ü–µ—Å—Å—ã (–∑–∞–ø–æ–ª–Ω—è–µ–º –±–∞–∑–æ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã)
    baseData.proc_1_code = baseData.proc_1_code || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    baseData.proc_1_desc = baseData.proc_1_desc || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    baseData.proc_1_nvos = baseData.proc_1_nvos || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    baseData.proc_1_capacity = baseData.proc_1_capacity || '0';
    baseData.proc_1_unit = baseData.proc_1_unit || '—à—Ç.';
    
    baseData.proc_2_code = baseData.proc_2_code || '';
    baseData.proc_2_desc = baseData.proc_2_desc || '';
    baseData.proc_2_nvos = baseData.proc_2_nvos || '';
    baseData.proc_2_capacity = baseData.proc_2_capacity || '';
    baseData.proc_2_unit = baseData.proc_2_unit || '';
    
    baseData.proc_3_code = baseData.proc_3_code || '';
    baseData.proc_3_desc = baseData.proc_3_desc || '';
    baseData.proc_3_nvos = baseData.proc_3_nvos || '';
    baseData.proc_3_capacity = baseData.proc_3_capacity || '';
    baseData.proc_3_unit = baseData.proc_3_unit || '';
  }
  
  return baseData;
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞
 */
export async function generateReport(
  reportType: ReportType,
  data: ReportGenerationData,
  options: ReportGenerationOptions = {}
): Promise<ReportGenerationResult> {
  try {
    const {
      outputDir = 'public/reports',
      templateDir = 'templates',
      includeMetadata = true
    } = options;
    
    console.log(`üìã –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ ${reportType} –¥–ª—è ${data.org_name}`);
    
    // 1. –ó–∞–≥—Ä—É–∂–∞–µ–º —à–∞–±–ª–æ–Ω
    const template = await loadTemplate(reportType, templateDir);
    console.log(`‚úÖ –®–∞–±–ª–æ–Ω ${reportType} –∑–∞–≥—Ä—É–∂–µ–Ω`);
    
    // 2. –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    const templateData = prepareTemplateData(data, reportType, includeMetadata);
    
    // 3. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —à–∞–±–ª–æ–Ω
    const templateResult = processTemplate(template, templateData, reportType);
    
    if (templateResult.errors.length > 0) {
      return {
        success: false,
        templateErrors: templateResult.errors,
        error: '–û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–∞'
      };
    }
    
    if (templateResult.unreplacedTokens.length > 0) {
      console.warn('‚ö†Ô∏è –ù–µ–∑–∞–º–µ–Ω–µ–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã:', templateResult.unreplacedTokens);
    }
    
    console.log('‚úÖ –®–∞–±–ª–æ–Ω –æ–±—Ä–∞–±–æ—Ç–∞–Ω, —Ç–æ–∫–µ–Ω—ã –∑–∞–º–µ–Ω–µ–Ω—ã');
    
    // 4. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF
    const reportPeriod = reportType === '296-FZ' 
      ? (data.report_year || '2025')
      : (data.report_year_q || '2025-2');
      
    const pdfResult = await generateReportPDF(
      templateResult.processedHtml,
      reportType,
      data.org_name,
      reportPeriod,
      outputDir
    );
    
    if (!pdfResult.success) {
      return {
        success: false,
        error: `–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF: ${pdfResult.error}`
      };
    }
    
    console.log(`üéâ –û—Ç—á–µ—Ç ${reportType} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω`);
    
    return {
      success: true,
      filePath: pdfResult.filePath,
      fileName: pdfResult.filePath ? path.basename(pdfResult.filePath) : undefined,
      fileSize: pdfResult.fileSize,
      unreplacedTokens: templateResult.unreplacedTokens
    };
    
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ ${reportType}:`, error);
    
    return {
      success: false,
      error: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
    };
  }
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ 296-FZ
 */
export async function generate296FZReport(
  data: ReportGenerationData,
  options?: ReportGenerationOptions
): Promise<ReportGenerationResult> {
  return generateReport('296-FZ', data, options);
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ CBAM
 */
export async function generateCBAMReport(
  data: ReportGenerationData,
  options?: ReportGenerationOptions
): Promise<ReportGenerationResult> {
  return generateReport('CBAM', data, options);
}

/**
 * –ü–∞–∫–µ—Ç–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤
 */
export async function generateBatchReports(
  reports: Array<{
    type: ReportType;
    data: ReportGenerationData;
    options?: ReportGenerationOptions;
  }>
): Promise<ReportGenerationResult[]> {
  const results: ReportGenerationResult[] = [];
  
  for (const report of reports) {
    const result = await generateReport(report.type, report.data, report.options);
    results.push(result);
    
    // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –≥–µ–Ω–µ—Ä–∞—Ü–∏—è–º–∏ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
    await new Promise(resolve => setTimeout(resolve, 100));
  }
  
  return results;
}