/**
 * Enhanced Report Generator —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π CBAM Pricing
 * –†–∞—Å—à–∏—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π report-generator.ts –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ CBAM —Ç–∞—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
 */

import { 
  generateReport as baseGenerateReport,
  generateCBAMReport as baseGenerateCBAMReport,
  ReportGenerationData,
  ReportGenerationOptions,
  ReportGenerationResult
} from './report-generator';
import { 
  calculateCBAMPricing,
  checkCBAMSubscription,
  recordCBAMCharges,
  type CBAMLineItem,
  type CBAMPricingCalculation
} from './cbam-pricing';

export interface CBAMReportGenerationData {
  // –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è –æ—Ç—á–µ—Ç–∞
  org_name: string;
  org_address: string;
  signer_name: string;
  sign_date: string;
  generation_date: string;
  generation_time: string;
  document_id: string;
  organizationId: string;
  
  // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è 296-FZ
  org_inn?: string;
  org_okpo?: string;
  org_oktmo?: string;
  org_phone?: string;
  org_email?: string;
  report_year?: string;
  signer_position?: string;
  
  // –ü–æ–ª—è –¥–ª—è CBAM
  eori?: string;
  cbam_id?: string;
  org_country?: string;
  report_year_q?: string;
  signer_pos?: string;
  
  // –î–∞–Ω–Ω—ã–µ –æ –≤—ã–±—Ä–æ—Å–∞—Ö –¥–ª—è CBAM —Ä–∞—Å—á–µ—Ç–æ–≤  
  lineItems?: CBAMLineItem[];
  
  // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –ø–æ–ª—è (product_*_*)
  [key: string]: string | number | boolean | undefined | CBAMLineItem[];
}

export interface CBAMReportGenerationResult extends ReportGenerationResult {
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ CBAM —Ç–∞—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
  pricingInfo?: {
    calculation: CBAMPricingCalculation;
    hasSubscription: boolean;
    totalCost: number;
    currency: 'RUB';
    chargeApplied: boolean;
  };
  blocked?: boolean;
  blockReason?: string;
}

export interface CBAMReportGenerationOptions extends ReportGenerationOptions {
  // –û–ø—Ü–∏–∏ –¥–ª—è CBAM —Ç–∞—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
  skipPricingCheck?: boolean;
  previewMode?: boolean; // –¢–æ–ª—å–∫–æ —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –±–µ–∑ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
  applyCharges?: boolean; // –ü—Ä–∏–º–µ–Ω—è—Ç—å –ª–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è
}

/**
 * –ò–∑–≤–ª–µ–∫–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –≤—ã–±—Ä–æ—Å–∞—Ö –∏–∑ ReportGenerationData –¥–ª—è CBAM —Ä–∞—Å—á–µ—Ç–æ–≤
 */
function extractCBAMLineItems(data: CBAMReportGenerationData): CBAMLineItem[] {
  // –ï—Å–ª–∏ –ª–∏–Ω–∏–∏ —É–∂–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –Ω–∞–ø—Ä—è–º—É—é
  if (data.lineItems && data.lineItems.length > 0) {
    return data.lineItems;
  }

  // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–∑ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –ø–æ–ª–µ–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
  // product_1_name, product_1_carbon_intensity, product_1_quantity, product_1_emissions
  const lineItems: CBAMLineItem[] = [];
  const productIndexes: Set<number> = new Set();

  // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –Ω–æ–º–µ—Ä–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
  Object.keys(data).forEach(key => {
    const match = key.match(/^product_(\d+)_/);
    if (match) {
      productIndexes.add(parseInt(match[1]));
    }
  });

  // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞
  Array.from(productIndexes).sort().forEach(index => {
    const productName = data[`product_${index}_name`];
    const carbonIntensity = data[`product_${index}_carbon_intensity`];
    const quantity = data[`product_${index}_quantity`];
    const totalEmissions = data[`product_${index}_emissions`];

    if (productName && 
        typeof carbonIntensity === 'number' &&
        typeof quantity === 'number' &&
        typeof totalEmissions === 'number') {
      
      lineItems.push({
        id: `product_${index}`,
        productName: String(productName),
        carbonIntensity,
        quantity,
        totalEmissions
      });
    }
  });

  return lineItems;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ CBAM –æ—Ç—á–µ—Ç–∞ —Å —É—á–µ—Ç–æ–º —Ç–∞—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
 */
async function checkCBAMGenerationEligibility(
  data: CBAMReportGenerationData,
  options: CBAMReportGenerationOptions = {}
): Promise<{
  canGenerate: boolean;
  pricingCalculation?: CBAMPricingCalculation;
  reason?: string;
}> {
  try {
    const { organizationId } = data;
    const { skipPricingCheck = false } = options;

    if (skipPricingCheck) {
      return { canGenerate: true };
    }

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≤—ã–±—Ä–æ—Å–∞—Ö
    const lineItems = extractCBAMLineItems(data);

    if (lineItems.length === 0) {
      return {
        canGenerate: false,
        reason: '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ –æ –≤—ã–±—Ä–æ—Å–∞—Ö –¥–ª—è CBAM –æ—Ç—á–µ—Ç–∞'
      };
    }

    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å
    const pricingCalculation = await calculateCBAMPricing({
      organizationId,
      lineItems,
      reportType: 'CBAM_XML' // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º XML –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    });

    // –ï—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π —Ç–∞—Ä–∏—Ñ - –º–æ–∂–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å
    if (pricingCalculation.hasSubscription) {
      return {
        canGenerate: true,
        pricingCalculation
      };
    }

    // –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏, –Ω–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å = 0 (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–µ—Ç –≤—ã–±—Ä–æ—Å–æ–≤)
    if (pricingCalculation.totalPrice === 0) {
      return {
        canGenerate: true,
        pricingCalculation
      };
    }

    // –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏ - –±–ª–æ–∫–∏—Ä—É–µ–º, —Ç—Ä–µ–±—É–µ–º –æ–ø–ª–∞—Ç—É –∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É
    return {
      canGenerate: false,
      pricingCalculation,
      reason: `–î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ CBAM –æ—Ç—á–µ—Ç–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è CBAM —Ç–∞—Ä–∏—Ñ –∏–ª–∏ –æ–ø–ª–∞—Ç–∞ ${pricingCalculation.totalPrice}‚ÇΩ`
    };

  } catch (error) {
    console.error('Error checking CBAM generation eligibility:', error);
    return {
      canGenerate: false,
      reason: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ CBAM –æ—Ç—á–µ—Ç–∞'
    };
  }
}

/**
 * –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è CBAM –æ—Ç—á–µ—Ç–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ç–∞—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
 */
export async function generateCBAMReportWithPricing(
  data: CBAMReportGenerationData,
  options: CBAMReportGenerationOptions = {}
): Promise<CBAMReportGenerationResult> {
  try {
    const { previewMode = false, applyCharges = true } = options;

    console.log(`üìã –ì–µ–Ω–µ—Ä–∞—Ü–∏—è CBAM –æ—Ç—á–µ—Ç–∞ —Å pricing –¥–ª—è ${data.org_name}`);

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    const eligibilityCheck = await checkCBAMGenerationEligibility(data, options);

    // 2. –ï—Å–ª–∏ —Ä–µ–∂–∏–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–∞—Å—á–µ—Ç –¥–∞–∂–µ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ
    if (previewMode) {
      if (eligibilityCheck.pricingCalculation) {
        return {
          success: true,
          blocked: false,
          pricingInfo: {
            calculation: eligibilityCheck.pricingCalculation,
            hasSubscription: eligibilityCheck.pricingCalculation.hasSubscription,
            totalCost: eligibilityCheck.pricingCalculation.totalPrice,
            currency: 'RUB',
            chargeApplied: false
          }
        };
      } else {
        return {
          success: false,
          blocked: false,
          error: eligibilityCheck.reason || '–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞'
        };
      }
    }

    // 3. –î–ª—è –æ–±—ã—á–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
    if (!eligibilityCheck.canGenerate) {
      return {
        success: false,
        blocked: true,
        blockReason: eligibilityCheck.reason,
        error: eligibilityCheck.reason,
        pricingInfo: eligibilityCheck.pricingCalculation ? {
          calculation: eligibilityCheck.pricingCalculation,
          hasSubscription: eligibilityCheck.pricingCalculation.hasSubscription,
          totalCost: eligibilityCheck.pricingCalculation.totalPrice,
          currency: 'RUB',
          chargeApplied: false
        } : undefined
      };
    }

    // 4. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –æ–±—ã—á–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º (—à–∞–±–ª–æ–Ω—ã –Ω–µ –∏–∑–º–µ–Ω—è–µ–º!)
    const { lineItems, organizationId, ...restData } = data;
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–µ –ø–æ–ª—è –¥–ª—è –±–∞–∑–æ–≤–æ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
    const baseData: ReportGenerationData = Object.keys(restData).reduce((acc, key) => {
      const value = (restData as any)[key];
      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean' || value === undefined) {
        acc[key] = value;
      }
      return acc;
    }, {} as ReportGenerationData);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
    baseData.org_name = data.org_name;
    baseData.org_address = data.org_address;
    baseData.signer_name = data.signer_name;
    baseData.sign_date = data.sign_date;
    baseData.generation_date = data.generation_date;
    baseData.generation_time = data.generation_time;
    baseData.document_id = data.document_id;
    
    const reportResult = await baseGenerateCBAMReport(baseData, options);

    if (!reportResult.success) {
      return {
        ...reportResult,
        blocked: false,
        pricingInfo: eligibilityCheck.pricingCalculation ? {
          calculation: eligibilityCheck.pricingCalculation,
          hasSubscription: eligibilityCheck.pricingCalculation.hasSubscription,
          totalCost: eligibilityCheck.pricingCalculation.totalPrice,
          currency: 'RUB',
          chargeApplied: false
        } : undefined
      };
    }

    // 5. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
    let chargeApplied = false;
    if (applyCharges && eligibilityCheck.pricingCalculation && reportResult.filePath) {
      try {
        // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ—Ç—á–µ—Ç–∞ –≤ –±–∞–∑–µ –¥–ª—è —Å–≤—è–∑–∏ —Å –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è–º–∏
        // (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –æ—Ç—á–µ—Ç —É–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –±–∞–∑–µ —á–µ—Ä–µ–∑ –¥—Ä—É–≥–∏–µ —Å–µ—Ä–≤–∏—Å—ã)
        const reportId = String(data.document_id || `cbam_${Date.now()}`);
        
        await recordCBAMCharges(eligibilityCheck.pricingCalculation, reportId);
        chargeApplied = true;
        
        console.log(`üí∞ CBAM –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∞–Ω—ã: ${eligibilityCheck.pricingCalculation.totalPrice}‚ÇΩ`);
      } catch (chargeError) {
        console.error('Error recording CBAM charges:', chargeError);
        // –ù–µ –±–ª–æ–∫–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –∑–∞–ø–∏—Å–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π
      }
    }

    // 6. –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–∞—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    return {
      ...reportResult,
      blocked: false,
      pricingInfo: eligibilityCheck.pricingCalculation ? {
        calculation: eligibilityCheck.pricingCalculation,
        hasSubscription: eligibilityCheck.pricingCalculation.hasSubscription,
        totalCost: eligibilityCheck.pricingCalculation.totalPrice,
        currency: 'RUB',
        chargeApplied
      } : undefined
    };

  } catch (error) {
    console.error('Error in generateCBAMReportWithPricing:', error);
    
    return {
      success: false,
      blocked: false,
      error: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ CBAM –æ—Ç—á–µ—Ç–∞'
    };
  }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ CBAM –æ—Ç—á–µ—Ç–∞
 */
export async function getCBAMReportPricing(
  data: CBAMReportGenerationData
): Promise<{
  success: boolean;
  pricing?: CBAMPricingCalculation;
  canGenerate: boolean;
  reason?: string;
}> {
  try {
    const eligibilityCheck = await checkCBAMGenerationEligibility(data, {
      skipPricingCheck: false
    });

    return {
      success: true,
      pricing: eligibilityCheck.pricingCalculation,
      canGenerate: eligibilityCheck.canGenerate,
      reason: eligibilityCheck.reason
    };

  } catch (error) {
    console.error('Error getting CBAM report pricing:', error);
    
    return {
      success: false,
      canGenerate: false,
      reason: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ CBAM –æ—Ç—á–µ—Ç–∞'
    };
  }
}

/**
 * Wrapper –¥–ª—è –æ–±—ã—á–Ω—ã—Ö (–Ω–µ-CBAM) –æ—Ç—á–µ—Ç–æ–≤
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –±–∞–∑–æ–≤—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
 */
export async function generate296FZReportWithPricing(
  data: ReportGenerationData,
  options?: ReportGenerationOptions
): Promise<ReportGenerationResult> {
  // –î–ª—è 296-FZ –æ—Ç—á–µ—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
  return baseGenerateReport('296-FZ', data, options);
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–∏–ø—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ API
