/**
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤ –æ—Ç—á–µ—Ç–æ–≤
 */

import { readFileSync } from 'fs';
import { join } from 'path';
import { replaceTokens, create296FZTemplateData, validateTemplate, REQUIRED_296FZ_TOKENS } from './template-engine';

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç —à–∞–±–ª–æ–Ω 296-–§–ó —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
 */
export function test296FZTemplate() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ 296-–§–ó...');

    // –ß–∏—Ç–∞–µ–º —à–∞–±–ª–æ–Ω
    const templatePath = join(process.cwd(), 'templates', 'ru-296fz-report-2025.html');
    const template = readFileSync(templatePath, 'utf-8');
    console.log('‚úÖ –®–∞–±–ª–æ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω');

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    const testData = {
      companyName: '–û–û–û "–¢–µ—Å—Ç–æ–≤–∞—è –ö–æ–º–ø–∞–Ω–∏—è"',
      fullCompanyName: '–û–±—â–µ—Å—Ç–≤–æ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å—é "–¢–µ—Å—Ç–æ–≤–∞—è –ö–æ–º–ø–∞–Ω–∏—è"',
      inn: '7701234567',
      ogrn: '1234567890123',
      address: '115114, –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, –¥. 1',
      email: 'test@example.ru',
      phone: '+7-495-123-45-67',
      reportingPeriod: '2024',
      totalEmissions: '1496.5',
      signerName: '–ü–µ—Ç—Ä–æ–≤ –ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤–∏—á',
      signerPosition: '–ì–µ–Ω–µ—Ä–∞–ª—å–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä'
    };

    // –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —à–∞–±–ª–æ–Ω–∞
    const templateData = create296FZTemplateData(testData);
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –¥–ª—è —à–∞–±–ª–æ–Ω–∞ —Å–æ–∑–¥–∞–Ω—ã');

    // –ó–∞–º–µ–Ω—è–µ–º —Ç–æ–∫–µ–Ω—ã
    const processedHtml = replaceTokens(template, templateData);
    console.log('‚úÖ –¢–æ–∫–µ–Ω—ã –∑–∞–º–µ–Ω–µ–Ω—ã');

    // –í–∞–ª–∏–¥–∏—Ä—É–µ–º —à–∞–±–ª–æ–Ω
    const validationErrors = validateTemplate(processedHtml, REQUIRED_296FZ_TOKENS);
    
    if (validationErrors.length > 0) {
      console.log('‚ùå –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:');
      validationErrors.forEach(error => {
        console.log(`  - ${error.token}: ${error.message}`);
      });
    } else {
      console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç –Ω–µ–∑–∞–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤
    const unreplacedTokens = processedHtml.match(/\[\[[a-z_]+\]\]/g);
    if (unreplacedTokens) {
      console.log('‚ö†Ô∏è  –ù–µ–∑–∞–º–µ–Ω–µ–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã:');
      unreplacedTokens.forEach(token => console.log(`  - ${token}`));
    } else {
      console.log('‚úÖ –í—Å–µ —Ç–æ–∫–µ–Ω—ã –∑–∞–º–µ–Ω–µ–Ω—ã');
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    const outputPath = join(process.cwd(), 'test-output-296fz.html');
    require('fs').writeFileSync(outputPath, processedHtml);
    console.log(`‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ ${outputPath}`);

    return {
      success: true,
      validationErrors,
      unreplacedTokens: unreplacedTokens || [],
      outputPath
    };

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error'
    };
  }
}

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç–µ—Å—Ç –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
 */
if (require.main === module) {
  test296FZTemplate();
}