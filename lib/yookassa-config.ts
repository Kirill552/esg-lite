/**
 * YooKassa Configuration
 * –ó–∞–¥–∞—á–∞ 6.1: –ù–∞—Å—Ç—Ä–æ–∏—Ç—å YooKassa –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
 * 
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏ production –æ–∫—Ä—É–∂–µ–Ω–∏—è
 * –û—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ YooKassa API v3 2025
 */

import { YooCheckout } from '@a2seven/yoo-checkout';

export interface YooKassaConfig {
  shopId: string;
  secretKey: string;
  returnUrl: string;
  webhookUrl: string;
  paymentTimeout: number;
  currency: string;
  isProduction: boolean;
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é YooKassa –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
 */
export function getYooKassaConfig(): YooKassaConfig {
  const shopId = process.env.YOOKASSA_SHOP_ID;
  const secretKey = process.env.YOOKASSA_SECRET_KEY;
  const returnUrl = process.env.YOOKASSA_RETURN_URL;
  const webhookUrl = process.env.YOOKASSA_WEBHOOK_URL;
  const paymentTimeout = parseInt(process.env.YOOKASSA_PAYMENT_TIMEOUT || '15');
  const currency = process.env.YOOKASSA_CURRENCY || 'RUB';
  
  if (!shopId || !secretKey) {
    throw new Error(
      'YooKassa configuration error: YOOKASSA_SHOP_ID and YOOKASSA_SECRET_KEY must be set'
    );
  }

  if (!returnUrl || !webhookUrl) {
    throw new Error(
      'YooKassa configuration error: YOOKASSA_RETURN_URL and YOOKASSA_WEBHOOK_URL must be set'
    );
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º production –ø–æ —Å–µ–∫—Ä–µ—Ç–Ω–æ–º—É –∫–ª—é—á—É
  const isProduction = secretKey.startsWith('live_');

  return {
    shopId,
    secretKey,
    returnUrl,
    webhookUrl,
    paymentTimeout,
    currency,
    isProduction
  };
}

/**
 * –°–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä YooKassa –∫–ª–∏–µ–Ω—Ç–∞
 */
export function createYooKassaClient(): YooCheckout {
  const config = getYooKassaConfig();
  
  const client = new YooCheckout({
    shopId: config.shopId,
    secretKey: config.secretKey,
    debug: !config.isProduction
  });

  return client;
}

/**
 * –í–∞–ª–∏–¥–∞—Ü–∏—è webhook –ø–æ–¥–ø–∏—Å–∏
 * –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–¥–¥–µ–ª–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Ç YooKassa
 */
export function validateWebhookSignature(
  requestBody: string,
  headers: Record<string, string | string[] | undefined>
): boolean {
  const config = getYooKassaConfig();
  
  // –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å –ø–æ–¥–ø–∏—Å—å—é
  const signature = headers['yookassa-signature'] || headers['Yookassa-Signature'];
  
  if (!signature || typeof signature !== 'string') {
    console.error('‚ùå YooKassa webhook: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–¥–ø–∏—Å—å');
    return false;
  }

  try {
    // –°–æ–∑–¥–∞–µ–º –æ–∂–∏–¥–∞–µ–º—É—é –ø–æ–¥–ø–∏—Å—å
    const crypto = require('crypto');
    const expectedSignature = crypto
      .createHmac('sha256', config.secretKey)
      .update(requestBody)
      .digest('hex');

    // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –ø–æ–¥–ø–∏—Å–∏ (–∑–∞—â–∏—Ç–∞ –æ—Ç timing attacks)
    const actualSignature = signature.toLowerCase();
    const expected = expectedSignature.toLowerCase();
    
    if (actualSignature.length !== expected.length) {
      return false;
    }
    
    let result = 0;
    for (let i = 0; i < actualSignature.length; i++) {
      result |= actualSignature.charCodeAt(i) ^ expected.charCodeAt(i);
    }
    
    const isValid = result === 0;
    
    if (!isValid) {
      console.error('‚ùå YooKassa webhook: –Ω–µ–≤–µ—Ä–Ω–∞—è –ø–æ–¥–ø–∏—Å—å');
    }
    
    return isValid;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ YooKassa webhook:', error);
    return false;
  }
}

/**
 * –¢–∏–ø—ã –ø–ª–∞—Ç–µ–∂–µ–π –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –≤ ESG-Lite
 */
export enum PaymentType {
  CREDITS = 'credits',           // –†–∞–∑–æ–≤–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–æ–≤
  SUBSCRIPTION = 'subscription', // –¢–∞—Ä–∏—Ñ (LITE_ANNUAL, CBAM_ADDON)
  MARKETPLACE = 'marketplace'    // –û–ø–ª–∞—Ç–∞ —É—Å–ª—É–≥ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤
}

/**
 * –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–ª–∞—Ç–µ–∂–∞
 */
export interface PaymentMetadata {
  type: PaymentType;
  organizationId: string;
  userId: string;
  
  // –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–æ–≤
  creditsAmount?: number;
  
  // –î–ª—è –ø–æ–¥–ø–∏—Å–æ–∫
  subscriptionPlan?: 'LITE_ANNUAL' | 'CBAM_ADDON';
  
  // –î–ª—è marketplace
  expertId?: string;
  serviceId?: string;
  
  // –û–±—â–∏–µ –ø–æ–ª—è
  description: string;
  returnUrl?: string;
}

/**
 * –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –ø–ª–∞—Ç–µ–∂–µ–π
 */
export const PAYMENT_CONSTANTS = {
  // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞ (–≤ —Ä—É–±–ª—è—Ö)
  MIN_AMOUNT: 100,
  
  // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞ (–≤ —Ä—É–±–ª—è—Ö)
  MAX_AMOUNT: 1000000,
  
  // –í—Ä–µ–º—è –∂–∏–∑–Ω–∏ –ø–ª–∞—Ç–µ–∂–∞ (–≤ –º–∏–Ω—É—Ç–∞—Ö)
  DEFAULT_TIMEOUT: 15,
  
  // –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –≤–∞–ª—é—Ç—ã
  CURRENCIES: ['RUB'] as const,
  
  // –ú–µ—Ç–æ–¥—ã –æ–ø–ª–∞—Ç—ã
  PAYMENT_METHODS: [
    'bank_card',    // –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫–∞—Ä—Ç—ã
    'yoo_money',    // –ÆMoney
    'sberbank',     // –°–±–µ—Ä–±–∞–Ω–∫ –û–Ω–ª–∞–π–Ω
    'alfabank',     // –ê–ª—å—Ñ–∞-–ö–ª–∏–∫
    'tinkoff_bank', // –¢–∏–Ω—å–∫–æ—Ñ—Ñ
    'qiwi',         // QIWI Wallet
    'webmoney',     // WebMoney
    'sbp'           // –°–∏—Å—Ç–µ–º–∞ –±—ã—Å—Ç—Ä—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π
  ] as const
} as const;

/**
 * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π —Å YooKassa
 */
export function logYooKassaOperation(
  operation: string,
  data: any,
  level: 'info' | 'error' | 'warn' = 'info'
) {
  const timestamp = new Date().toISOString();
  const logData = {
    timestamp,
    service: 'yookassa',
    operation,
    environment: getYooKassaConfig().isProduction ? 'production' : 'test',
    ...data
  };
  
  switch (level) {
    case 'error':
      console.error('‚ùå YooKassa:', JSON.stringify(logData, null, 2));
      break;
    case 'warn':
      console.warn('‚ö†Ô∏è YooKassa:', JSON.stringify(logData, null, 2));
      break;
    default:
      console.log('üí≥ YooKassa:', JSON.stringify(logData, null, 2));
  }
}

export default {
  getYooKassaConfig,
  createYooKassaClient,
  validateWebhookSignature,
  PaymentType,
  PAYMENT_CONSTANTS,
  logYooKassaOperation
};
